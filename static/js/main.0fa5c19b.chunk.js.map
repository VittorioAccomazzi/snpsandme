{"version":3,"sources":["webpack:///./src/features/appMain/appWorker/bWorker.ts?1c20","features/appMain/appWorker/fWorker.ts","features/appMain/appMainSlice.ts","genomeLib/snps.ts","features/appMain/snpList.ts","features/appMain/appTableHeader.tsx","features/appMain/appTableBody.tsx","features/appMain/appTable.tsx","features/appMain/appMain.tsx","features/appToolbar/appProgress.tsx","features/appToolbar/appInfo.tsx","features/appToolbar/appSelector.tsx","features/appToolbar/appToolbar.tsx","features/appVersion/appVersion.tsx","features/appHelp/appHelp.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/appMain/appWorker/bWorker.ts"],"names":["module","exports","Worker","BackWorkerFactory","comlinkWorker","ForegroundWorker","progress","worker","data","timerID","this","snps","type","a","Error","default","start","startWorker","window","clearTimeout","doWork","Next","res","length","setTimeout","console","log","populationTypeSlice","createSlice","name","initialState","population","reducers","setPopulation","state","action","payload","actions","selecPopulation","filenameSlice","filename","setFilename","selecFilename","filenameReducer","reducer","snpsSlice","list","setSnps","selectSnps","snpsReducer","midColor","lowColor","higColor","noColor","unkColor","defaultSortField","SNPs","text","chrs","split","forEach","line","startsWith","items","map","v","trim","chr","toUpperCase","undefined","findIndex","match","Number","isNaN","push","id","bases","filter","file","fs","Promise","rej","err","obj","toString","sortFunctions","ID","b","v1","parseInt","snp","substr","v2","Chromosome","sortByTextField","Base","Frequency","perc","Publications","pub","SnpList","update","sortId","sortDir","stop","Snps","snpList","toSnpEl","doSort","vals","merge","sendUpdate","dir","d","sort","val","clone","e","done","el","find","s","useStyles","makeStyles","theme","table","width","container","header","background","fontWeight","TableHeaders","align","AppTableHeader","classes","useState","orderBy","setOrderBy","direction","setDirection","TableHead","TableRow","TableCell","className","TableSortLabel","active","onClick","novalue","high","mid","low","AppTableBody","classSelector","TableBody","component","scope","target","href","rel","toFixed","containerStyle","maxHeight","AppTable","useRef","dispatch","useDispatch","useSelector","ga","useGA4React","useEffect","current","TableContainer","Paper","style","Table","size","stickyHeader","aria-label","event","root","height","padding","drop","borderWidth","borderStyle","borderColor","palette","primary","light","display","justifyContent","alignItems","flexDirection","dark","fontSize","color","textAlign","noDisplay","AppMain","setText","error","setError","pageview","onDrop","useCallback","files","path","toLowerCase","endsWith","indexOf","readFile","sanityCheck","useDropzone","getRootProps","getInputProps","isDragActive","Typography","reader","FileReader","onloadend","result","readAsText","createStyles","cirProgress","marginRight","spacing","txtProgress","cirHidden","textHidden","iconDisplay","iconHidden","AppProgress","todo","total","showProgres","percentage","progVariant","progLabel","Math","round","Box","position","CircularProgress","variant","value","top","left","bottom","right","margin","boxHidden","boxDisplay","AppInfo","hPerc","mPerc","lPerc","uPerc","nPerc","values","reduce","t","ret","sum","per","floor","toPersentages","colors","noWrap","index","combobox","textColor","icon","fill","AppSelector","selectPopulation","options","types","typeName","TextField","select","onChange","InputProps","notchedOutline","SelectProps","option","MenuItem","flexGrow","toolbar","toolList","AppToolbar","AppBar","Toolbar","version","main","ribbon","AppVersion","label","baseURL","forkme","src","alt","gitVersion","long","location","localStorageKey","localStorageValue","MapHelp","isRead","localStorage","getItem","getReadHelpStatus","open","setOpen","onClose","Dialog","aria-labelledby","aria-describedby","maxWidth","DialogTitle","DialogContent","DialogContentText","isMobile","title","frameBorder","allow","allowFullScreen","DialogActions","Button","setItem","setReadHelpStatus","autoFocus","createMuiTheme","blue","secondary","withStyles","app","CssBaseline","store","configureStore","populationReducer","Boolean","hostname","ga4react","GA4React","initialize","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","inst","wrap","f"],"mappings":"yFAAAA,EAAOC,QAAU,WACf,OAAO,IAAIC,OAAO,IAA0B,oC,sRCMxCC,EAAoB,I,OAAIC,GAYTC,E,WAOjB,WAAaC,GAAsB,yBAL3BC,OAAmC,KAKT,KAJ1BC,KAA2B,KAID,KAH1BC,QAAyB,KAGC,KAF1BH,cAE0B,EAC9BI,KAAKJ,SAAWA,E,gFAGpB,WAAaK,EAAcC,GAA3B,SAAAC,EAAA,0DACQH,KAAKH,OADb,sBAC4BO,MAAM,+CADlC,cAEIJ,KAAKF,KAAO,CAAEG,OAAMC,QAFxB,SAGwB,IAAIT,EAAkBY,QAAQL,KAAKF,KAAKI,MAHhE,OAGIF,KAAKH,OAHT,OAIIG,KAAKH,OAAOS,MAAMN,KAAKF,KAAKG,MAC5BD,KAAKO,cALT,gD,2EAQA,WACQP,KAAKD,SAAUS,OAAOC,aAAcT,KAAKD,SAC7CC,KAAKD,QAAU,KACfC,KAAKF,KAAO,O,gEAGhB,2FAEIE,KAAKH,OAAQS,MAAMN,KAAKF,KAAMG,OAExBS,EAJV,uCAImB,4BAAAP,EAAA,0DACP,EAAKL,OAAQ,EAAKD,OADX,uBAEP,EAAKE,QAAU,KAFR,SAGS,EAAKF,OAAOc,OAHrB,OAGHC,EAHG,OAIH,EAAKd,MAAQ,EAAKD,SACde,EAAIC,OAAS,GACb,EAAKjB,SAASgB,GACd,EAAKb,QAAUS,OAAOM,WAAWJ,EAxC1C,OA0CS,EAAKb,OAAS,KACdkB,QAAQC,IAAI,uBAVb,2CAJnB,wG,qECzBWC,EAAsBC,YAAY,CAC7CC,KAAM,iBACNC,aANqD,CACrDC,WAAa,YAMbC,SAAU,CACNC,cAAgB,SAAEC,EAAOC,GACrBD,EAAMH,WAAaI,EAAOC,YAKtBH,EAAiBN,EAAoBU,QAArCJ,cACDK,EAAiB,SAACJ,GAAD,OAAsBA,EAAMH,WAAWA,YACtDJ,IAAf,QAgBWY,EAAgBX,YAAY,CACvCC,KAAM,WACNC,aAN8C,CAC9CU,SAAW,IAMXR,SAAU,CACNS,YAAc,SAAEP,EAAOC,GACnBD,EAAMM,SAAWL,EAAOC,YAKpBK,EAAeF,EAAcF,QAA7BI,YACDC,EAAe,SAACR,GAAD,OAAsBA,EAAMM,SAASA,UACpDG,EAAiBJ,EAAcK,QAoB7BC,EAAYjB,YAAY,CACnCC,KAAM,OACNC,aAN8B,CAC9BgB,KAAO,IAMPd,SAAU,CACNe,QAAU,SAAEb,EAAOC,GACfD,EAAMY,KAAQX,EAAOC,YAKhBW,EAAYF,EAAUR,QAAtBU,QACFC,EAAY,SAACd,GAAD,OAAsBA,EAAMvB,MACxCsC,EAAaJ,EAAUD,QASzBM,EAAW,UACXC,EAAW,UACXC,EAAW,UACXC,EAAW,UACXC,EAAW,UASXC,EAAmB,Y,QCxGXC,E,WAIjB,WAAcC,EAAeC,GAAmB,IAAD,gCAFvCZ,UAEuC,EAC3CpC,KAAKoC,KAAO,GACAW,EAAKE,MAAM,MACjBC,SAAQ,SAACC,GACX,GAAIA,EAAKC,WAAW,MAAO,CACvB,IAAIC,EAAQF,EAAKF,MAAM,MAAMK,KAAI,SAACC,GAAD,OAAKA,EAAEC,UACxC,GAAqB,IAAjBH,EAAMxC,OAAc,CACpB,IAAI4C,EAAMJ,EAAM,GAAGK,oBACNC,IAATX,GAAsBA,EAAKY,WAAU,SAAAL,GAAC,OAAEA,IAAIE,MAAO,IAC/CJ,EAAM,GAAGQ,MAAM,YAAcC,OAAOC,MAAMD,OAAOT,EAAM,MACvD,EAAKjB,KAAK4B,KAAM,CACZC,GAAKZ,EAAM,GACXI,MACAS,MAAQb,EAAM,GAAGK,qB,yCAS7C,WACI,OAAO1D,KAAKoC,O,2BAGhB,SAAcqB,GAEV,OADAA,EAAMA,EAAID,OAAOE,cACV1D,KAAKoC,KAAK+B,QAAO,SAACZ,GAAD,OAAKA,EAAEE,MAAMA,Q,8DAGzC,WAAuBW,GAAvB,qEACSC,aAAcD,GADvB,yCAEe,IAAIE,SAAQ,SAAC1D,EAAI2D,GACpBF,WAAYD,EAAM,IAAI,SAACI,EAAK1E,GACpB0E,GAAMD,EAAIC,GACd,IAAIC,EAAM,IAAI3B,EAAKhD,EAAK4E,YACxB9D,EAAI6D,UANpB,aAUc,IAAIrE,MAAJ,eAAkBgE,EAAlB,gBAVd,2C,8DCpCEO,GAAgB,CAClBC,GA2EJ,SAAmBzE,EAAY0E,GAC3B,IAAIC,EAAKC,SAAS5E,EAAE6E,IAAIf,GAAGgB,OAAO,IAC9BC,EAAKH,SAASF,EAAEG,IAAIf,GAAGgB,OAAO,IAClC,OAAQH,EAAGI,GA7EXC,WAgFJ,SAAoBhF,EAAY0E,GAC5B,OAAOO,GAAgBjF,EAAE0E,EAAE,QAhF3BQ,KAmFJ,SAAoBlF,EAAY0E,GAC5B,OAAOO,GAAgBjF,EAAE0E,EAAE,UAnF3BS,UA4FJ,SAAoBnF,EAAY0E,GAAuB,IAAD,IAC9CC,EAAE,UAAG3E,EAAEoF,YAAL,QAAa,EACfL,EAAE,UAAGL,EAAEU,YAAL,QAAa,EACnB,OAAOT,EAAGI,GA9FVM,aAiGJ,SAAmBrF,EAAY0E,GAC3B,OAAQ1E,EAAEsF,IAAIZ,EAAEY,MA/FCC,G,WAQjB,WAAaC,GAAmB,yBANxB9F,OAAmC,KAMZ,KALvB8F,YAKuB,OAJvBvD,KAAkB,GAIK,KAHvBwD,OAA+B/C,EAGR,KAFvBgD,QF4FoB,MEzFxB7F,KAAK2F,OAASA,E,yCAGlB,SAAO7F,EAAeI,GAAyB,IAAD,OACtCF,KAAKH,QAASG,KAAKH,OAAOiG,OAC9B,IAKI1D,EAAO,IAAI2D,EAAKjG,EAAK,CAAC,IAAI,OAC9BE,KAAKoC,KAAMA,EAAK4D,QAAQ1C,KAAI,SAAAC,GAAC,OAAE,EAAK0C,QAAQ1C,MAC5CvD,KAAKkG,SACLlG,KAAKH,OAAS,IAAIF,GARD,SAAEwG,GACf,EAAKC,MAAMD,GACS,cAAhB,EAAKP,QAA0C,iBAAhB,EAAKA,QAA4B,EAAKM,SACzE,EAAKG,gBAMTrG,KAAKH,OAAOS,MAAM8B,EAAK4D,QAAS9F,K,kBAGpC,SAAM+D,EAA0BqC,GAC5BtG,KAAK4F,OAAS3B,EACdjE,KAAK6F,QAASS,EACdtG,KAAKkG,SACLlG,KAAKqG,e,oBAGT,WAAkB,IAAD,OACTE,EAAsB,QAAjBvG,KAAK6F,QAAoB,GAAK,EACvC7F,KAAKoC,KAAOpC,KAAKoC,KAAKoE,MAAK,SAACrG,EAAE0E,GAAH,OAAO0B,EAAE5B,GAAc,EAAKiB,QAAQzF,EAAEsG,IAAI5B,EAAE4B,U,wBAG3E,WACI,IAAIC,EAAQ1G,KAAKoC,KAAKkB,KAAI,SAAAqD,GAAC,MAAG,CAACC,KAAKD,EAAEC,KAAMH,IAAI,eAAKE,EAAEF,SACvDzG,KAAK2F,OAAOe,K,mBAGhB,SAAcP,GACVnG,KAAKoC,KAAKc,SAAS,SAAA2D,GACf,IAAKA,EAAGD,KAAM,CACV,IAAIH,EAAMN,EAAKW,MAAK,SAAAvD,GAAC,OAAEsD,EAAGJ,IAAIzB,IAAIf,KAAOV,EAAEyB,IAAIf,MAC3CwC,IACAI,EAAGD,MAAO,EACVC,EAAGJ,IAAIlB,KAAOkB,EAAIlB,KAClBsB,EAAGJ,IAAIhB,IAAMgB,EAAIhB,W,qBAMjC,SAAiBsB,GACb,MAAO,CACHN,IAAM,CACFzB,IAAK+B,EACLxB,KAAO,KACPE,IAAM,GAEVmB,MAAO,O,KAmBnB,SAASxB,GAAgBjF,EAAY0E,EAAY3E,GAG7C,OAFSC,EAAE6E,IAAI9E,GACN2E,EAAEG,IAAI9E,GACC,GAAK,E,6DChGnB8G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,MAAM,QAERC,UAAW,GAEXC,OAAQ,CACJC,WAAW,UACXC,WAAY,YAYhBC,GAAgC,CAClC,CACIxD,GAAK,KACLyD,MAAQ,OACR3E,KAAO,UAEX,CACIkB,GAAK,aACLyD,MAAQ,QACR3E,KAAO,cAEX,CACIkB,GAAK,OACLyD,MAAQ,QACR3E,KAAO,QAEX,CACIkB,GAAK,YACLyD,MAAQ,QACR3E,KAAO,aAEX,CACIkB,GAAK,eACLyD,MAAO,QACP3E,KAAO,iBAMA,SAAS4E,GAAT,GAAuD,IAA7BnB,EAA4B,EAA5BA,KAC/BoB,EAAUZ,KADiD,EAEnCa,mBAA8BhF,GAFK,mBAE1DiF,EAF0D,KAEjDC,EAFiD,OAG/BF,mBHwDN,OG3DqC,mBAG1DG,EAH0D,KAG/CC,EAH+C,KAajE,OACI,eAACC,GAAA,EAAD,UACA,eAACC,GAAA,EAAD,UAEQV,GAAanE,KAAI,SAAAgE,GAAM,OACnB,eAACc,GAAA,EAAD,CAAWV,MAAOJ,EAAOI,MAAQW,UAAWT,EAAQN,OAApD,SACI,eAACgB,GAAA,EAAD,CACIC,OAAQT,IAAUR,EAAOrD,GACzB+D,UAAWA,EACXQ,QAAS,kBAlBjB,SAACvE,GACb,IAAIqC,EAAsB,MACtBwB,IAAY7D,IACZqC,EAAoB,QAAd0B,EAAsB,OAAS,OAEzCD,EAAW9D,GACXgE,EAAa3B,GACbE,EAAKvC,EAAIqC,GAWwBkC,CAAQlB,EAAOrD,KAHhC,SAKKqD,EAAOvE,QANiDuE,EAAOrD,W,cCpEtF+C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACpCvD,UAAW,CACR4D,WAAY3E,GAEd6F,QAAU,CACRlB,WAAY5E,GAEd+F,KAAO,CACLnB,WAAY7E,GAEdiG,IAAM,CACJpB,WAAY/E,GAEdoG,IAAM,CACJrB,WAAY9E,OAML,SAASoG,GAAT,GAAuD,IAA9BzG,EAA6B,EAA7BA,KAC9BwF,EAAUZ,KACV8B,EAAgB,SAAEjC,GACpB,IAAIJ,EAAMmB,EAAQjE,UAWlB,OAVIkD,EAAGD,OACiB,OAAhBC,EAAGJ,IAAIlB,MACPkB,EAAMmB,EAAQc,KACV7B,EAAGJ,IAAIlB,KJkEC,KIlEqBkB,EAAMmB,EAAQe,KAC3C9B,EAAGJ,IAAIlB,KJkEC,MIlEqBkB,EAAMmB,EAAQgB,MAG/CnC,EAAMmB,EAAQa,SAGfhC,GAEX,OACI,eAACsC,GAAA,EAAD,UACC3G,EAAKkB,KAAI,SAACuD,GAAD,OACR,gBAACsB,GAAA,EAAD,CAA8BE,UAAWS,EAAcjC,GAAvD,UACE,eAACuB,GAAA,EAAD,CAAWY,UAAU,KAAKC,MAAM,MAAhC,SAAsC,oBAAIC,OAAO,SAASC,KAAI,2CAAsCtC,EAAGJ,IAAIzB,IAAIf,IAAMmF,IAAI,aAAnF,SAAiGvC,EAAGJ,IAAIzB,IAAIf,OAClJ,eAACmE,GAAA,EAAD,CAAWV,MAAM,QAAjB,SAA0Bb,EAAGJ,IAAIzB,IAAIvB,MACrC,eAAC2E,GAAA,EAAD,CAAWV,MAAM,QAAjB,SAA0Bb,EAAGJ,IAAIzB,IAAId,QACrC,eAACkE,GAAA,EAAD,CAAWV,MAAM,QAAjB,SAA0C,OAAhBb,EAAGJ,IAAIlB,KAAgBsB,EAAGJ,IAAIlB,KAAK8D,QAAQ,GAAK,MAC1E,gBAACjB,GAAA,EAAD,CAAWV,MAAM,QAAjB,UAA0Bb,EAAGJ,IAAIhB,IAAjC,SALaoB,EAAGJ,IAAIzB,IAAIf,S,aClC9B+C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,MAAM,QAERC,UAAW,OAKXiC,GAAiB,CAACC,UAAW,oBAKpB,SAASC,GAAT,GAA6C,IAAzB1J,EAAwB,EAAxBA,KACzB8H,EAAUZ,KACZnH,EAAS4J,iBAAqB,MAC5BC,EAAUC,eACV1J,EAAO2J,aAAYtH,GACnBpC,EAAO0J,aAAYhI,GACnBiI,EAAKC,eAEXC,qBAAU,WAIFlK,EAAOmK,UAASnK,EAAOmK,QAAU,IAAItE,IAH1B,SAACtD,GACZsH,EAASrH,EAAQD,QAGrBvC,EAAOmK,QAAQ1J,MAAMR,EAAKI,KAC5B,CAACJ,EAAM4J,EAASxJ,IAQlB,OACQ,eAAC+J,EAAA,EAAD,CAAgBjB,UAAWkB,IAAO7B,UAAWT,EAAQP,UAAW8C,MAAOb,GAAvE,SACI,gBAACc,EAAA,EAAD,CAAO/B,UAAWT,EAAQT,MAAOkD,KAAK,QAAQC,cAAY,EAACC,aAAW,eAAtE,UACI,eAAC5C,GAAD,CAAgBnB,KARjB,SAAEvC,EAA0BqC,GACnCzG,EAAOmK,SAAUnK,EAAOmK,QAAQxD,KAAKvC,EAAIqC,GAC1CuD,GAAIA,EAAGW,MAAM,YAAavG,EAAI,OAOrB,eAAC4E,GAAD,CAAczG,KAAMnC,EAAKmC,YCtC7C,IAAM4E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuD,KAAM,CACErD,MAAM,OACNsD,OAAO,OACPC,QAAQ,OAEZC,KAAM,CACFxD,MAAM,OACNsD,OAAO,OACPG,YAAY,MACZC,YAAa,SACbC,YAAa7D,EAAM8D,QAAQC,QAAQC,MACnCC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,SACf,UAAW,CACPP,YAAa7D,EAAM8D,QAAQC,QAAQM,MAEvC,YAAa,CACTC,SAAS,GACTC,MAAOvE,EAAM8D,QAAQC,QAAQC,OAEjC,kBAAmB,CACfM,SAAS,GACTC,MAAOvE,EAAM8D,QAAQC,QAAQM,MAEjC,UAAW,CACXG,UAAU,SACVD,MAAMvE,EAAM8D,QAAQC,QAAQC,OAE5B,gBAAiB,CACbQ,UAAU,SACVD,MAAMvE,EAAM8D,QAAQC,QAAQM,OAGpCI,UAAY,CACRR,QAAQ,YAID,SAASS,KACpB,IAAMhE,EAAUZ,KADa,EAELa,mBAAsB,MAFjB,mBAEtB9E,EAFsB,KAEhB8I,EAFgB,OAGHhE,mBAAsB,MAHnB,mBAGtBiE,EAHsB,KAGfC,EAHe,KAIvBrC,EAAWC,eACXE,EAAKC,eAEXC,qBAAU,WACFF,GAAKA,EAAGmC,SAAS,UACvB,IAEF,IAAMC,EAASC,sBAAW,uCAAC,WAAOC,GAAP,mBAAAhM,EAAA,4DACnBiC,EAAO+J,EAAMhI,QAAO,SAACC,GAAD,OAAQA,EAAKgI,OAAShI,EAAKgI,KAAKC,cAAcC,SAAS,SAASlI,EAAKgI,KAAKC,cAAcE,QAAQ,aAAa,OAC5H1L,OAAS,GAFK,uBAGfuD,EAAOhC,EAAK,GAHG,SAIFoK,GAASpI,GAJP,OAKfqI,GADA3M,EAJe,SAMf+L,EAAQ/L,GACR4J,EAAS3H,EAAYqC,EAAKjD,OACvB0I,GAAIA,EAAGW,MAAM,kBAAmB,aAAc,MAEjDqB,EAAQ,MACRE,EAAS,GAAD,OAAI3H,EAAKjD,KAAT,kBACL0I,GAAIA,EAAGW,MAAM,uBAAwB,uBAAwB,KAZjD,uBAenBqB,EAAQ,MACRE,EAAS,kBAAD,OAAmBI,EAAM,GAAGhL,OACjC0I,GAAIA,EAAGW,MAAM,oBAAqB,oBAAqB,IAjBvC,4CAAD,sDAmBvB,CAACqB,EAASnC,IA9BgB,EAgCuBgD,YAAY,CAACT,WAA1DU,EAhCsB,EAgCtBA,aAAcC,EAhCQ,EAgCRA,cAAeC,EAhCP,EAgCOA,aAGpC,OACI,sBAAKxE,UAAWT,EAAQ6C,KAAxB,SACQ,iDAASkC,KAAT,IAAyBtE,UAAWT,EAAQ6C,KAA5C,UACQ,uBAAKpC,UAAYwE,EAAejF,EAAQgD,KAAOhD,EAAQ+D,UAAvD,UACI,eAAC,IAAD,CAAmBtD,UAAU,WAC7B,eAACyE,EAAA,EAAD,CAAYzE,UAAU,OAAtB,oCAGS,OAATtF,EACA,qCACI,eAAC,GAAD,CAAUjD,KAAMiD,MAEpB,uBAAKsF,UAAWwE,EAAejF,EAAQ+D,UAAY/D,EAAQgD,KAA3D,UACI,sCAAWgC,MACX,eAAC,IAAD,CAASvE,UAAU,WAEL,OAAVyD,EACA,qCACI,gBAACgB,EAAA,EAAD,CAAYzE,UAAU,OAAtB,0BAAiCyD,OAErC,+BAEJ,uCACI,eAACgB,EAAA,EAAD,CAAYzE,UAAU,OAAtB,uDACA,eAACyE,EAAA,EAAD,CAAYzE,UAAU,OAAtB,2D,SASrBmE,G,iFAAf,WAA0BpI,GAA1B,SAAAjE,EAAA,+EACW,IAAImE,SAAQ,SAAC1D,GAChB,IAAImM,EAAS,IAAIC,WACjBD,EAAOE,UAAY,kBAAKrM,EAAImM,EAAOG,SACnCH,EAAOI,WAAW/I,OAJ1B,4C,sBAYA,SAASqI,GAAY3M,GACjB,OAAOA,EAAKyM,QAHH,uCAGmB,GAAKzM,EAAKyM,QAF7B,0CAE6C,E,gEChIxDvF,GAAYC,aAAW,SAACC,GAAD,OAC3BkG,YAAa,CACXC,YAAa,CACXC,YAAapG,EAAMqG,QAAQ,GAC3B9B,MAAM,WAER+B,YAAa,CACTF,YAAapG,EAAMqG,QAAQ,GAC3B9B,MAAM,WAEVgC,UAAW,CACPH,YAAapG,EAAMqG,QAAQ,GAC3B9B,MAAM,eAEViC,WAAW,CACPvC,QAAQ,QAEZwC,YAAY,CACRlC,MAAQ,SAEZmC,WAAW,CACPzC,QAAS,aAMF,SAAS0C,KACpB,IAAMjG,EAAUZ,KACV/G,EAAU2J,aAAYtH,GACxBwL,EAAO,EACPlH,EAAO,EACX3G,EAAKmC,KAAKc,SAAS,SAAAK,GAAC,OAAIA,EAAEqD,KAAOA,IAASkH,OAC1C,IAAIC,EAAQnH,EAAKkH,EACXE,EAAcD,EAAQ,GAAMD,EAAO,EACnCG,EAAcD,EAAcpH,EAAKmH,EAAQ,IAAM,EAC/CG,EAAcD,EAAa,EAAI,cAAgB,gBAC/CE,EAAcF,EAAa,EAAb,UAAoBG,KAAKC,MAAMJ,GAA/B,QACpB,OACI,qCACI,gBAACK,GAAA,EAAD,CAAKC,SAAS,WAAWpD,QAAQ,cAAjC,UACI,eAACqD,GAAA,EAAD,CAAkBnG,UAAY2F,EAAcpG,EAAQyF,YAAczF,EAAQ6F,UAAWgB,QAASP,EAAaQ,MAAOT,IAClH,gBAACK,GAAA,EAAD,CACIK,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPP,SAAS,WACTpD,QAAQ,OACRE,WAAW,SACXD,eAAe,SARnB,UAUA,eAAC,KAAD,CAAwB/C,UAAY2F,EAAcpG,EAAQgG,WAAaG,EAAQ,EAAInG,EAAQ+F,YAAc/F,EAAQgG,WAAYpC,SAAS,UACtI,eAACsB,EAAA,EAAD,CAAY2B,QAAQ,UAAUzF,UAAU,MAAMX,UAAY2F,EAAepG,EAAQ4F,YAAc5F,EAAQ8F,WAAvG,SAAoHS,YCpDpI,IAAMnH,GAAYC,aAAW,SAACC,GAAD,OAC3BkG,YAAa,CACX2B,OAAQ,CACNzB,YAAapG,EAAMqG,QAAQ,IAE7ByB,UAAW,CACT7D,QAAU,QAEZ8D,WAAY,CACV9D,QAAU,oBAKD,SAAS+D,KACtB,IAAMtH,EAAUZ,KACV/G,EAAU2J,aAAYtH,GACxB6M,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EAEVtP,EAAKmC,KAAKc,SAAS,SAAA8B,GAAG,OAAIA,EAAI4B,KACN,OAAjB5B,EAAIyB,IAAIlB,KAAiBP,EAAIyB,IAAIlB,KRoEd,IQpEoC8J,IAAYrK,EAAIyB,IAAIlB,KRmExD,GQnE8E6J,IAAUD,IAAYG,IACtHC,OAEP,IAAMC,EAAS,CAACH,EAAOD,EAAOD,EAAOG,EAAOC,GACtCxB,EAAQyB,EAAOC,QAAO,SAACC,EAAEnM,GAAH,OAAOmM,EAAEnM,IAAE,GACjCgC,EA6BT,SAAuBiK,GACrB,IAAIG,EAAkB,GAClBC,EAAMJ,EAAOC,QAAO,SAAC1I,EAAExD,GAAH,OAAOwD,EAAExD,IAAE,GACnC,GAAIqM,EAAM,EAAG,CACX,IAAIC,EAAML,EAAOlM,KAAI,SAAAC,GAAC,OAAE6K,KAAK0B,MAAM,IAAIvM,EAAEqM,MACrCpL,EAAM,IAAMqL,EAAIJ,QAAO,SAAC1I,EAAExD,GAAH,OAAOwD,EAAExD,IAAE,GACtCsM,EAAIA,EAAIhP,OAAO,IAAM2D,EACrBmL,EAAME,EAAIvM,KAAI,SAAAC,GAAC,gBAAKA,EAAL,QAEjB,OAAOoM,EAtCOI,CAAeP,GACtBQ,EAAS,CAACvN,EAAUD,EAAUE,EAAUC,EAASC,GAExD,OAEE,gBAAC0L,GAAA,EAAD,CAAKC,SAAS,WAAWlG,UAAW0F,EAAO,EAAInG,EAAQqH,WAAarH,EAAQoH,UAA5E,UACE,gBAAClC,EAAA,EAAD,CAAYpF,MAAM,SAAS+G,QAAQ,UAAUhD,MAAM,YAAYpD,UAAWT,EAAQmH,OAAQkB,QAAM,EAAhG,wBAAsGlC,EAAtG,kBAAqHsB,EAArH,qBACA,eAACf,GAAA,EAAD,CACIK,IAAK,GACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPP,SAAS,WACTpD,QAAQ,OACRE,WAAW,SACXD,eAAe,SACf/C,UAAWT,EAAQmH,OATvB,SAYIxJ,EAAKjC,KAAI,SAACuD,EAAGqJ,GAAJ,OACP,sBAAK/F,MAAO,CAAC5C,WAAYyI,EAAOE,GAAQ3B,SAAS,WAAYnH,MAAOP,EAAI6D,OAAO,QAAawF,W,wBCjDlGlJ,GAAYC,aAAW,SAACC,GAAD,OAC3BkG,YAAa,CACX+C,SAAU,CACR7C,YAAapG,EAAMqG,QAAQ,GAC3BhG,WAAY,eAEd6I,UAAW,CACP3E,MAAQ,QACRZ,YAAa,MACbE,YAAa,oBAEjBsF,KAAM,CACFC,KAAM,cAKC,SAASC,KACpB,IAAM3I,EAAUZ,KACV9G,EAAQ0J,aAAY4G,GACpB9G,EAAWC,eAEX8G,EAAsB,CAAC,WAAY,UAAW,aAAc,eAC5DC,EAA6B,CAAC,WAAY,UAAW,SAAU,UAC/DC,EAAUF,EAAQC,EAAMnE,QAAQrM,IACtC,OAEI,eAAC0Q,GAAA,EAAD,CAAWvI,UAAWT,EAAQuI,SAAW1B,QAAQ,WAAWpE,KAAK,QAC7DwG,QAAM,EACNnC,MAAOiC,EACPG,SAAU,SAACnK,GAAK,IAAD,EACPF,EAAMiK,EAAMD,EAAQlE,QAAR,UAAgB5F,EAAEuC,OAAOwF,aAAzB,QAAkC,aAClDhF,EAASnI,EAAckF,KAE3BsK,WAAY,CACRnJ,QAAS,CACL6C,KAAM7C,EAAQwI,UACdY,eAAgBpJ,EAAQwI,YAGhCa,YAAa,CACTrJ,QAAS,CAAEyI,KAAMzI,EAAQyI,OAdjC,SAiBKI,EAAQnN,KAAI,SAAC4N,GAAD,OACT,eAACC,GAAA,EAAD,CAAuBzC,MAAOwC,EAA9B,SACKA,GADUA,QCzC/B,IAAMlK,GAAYC,aAAW,SAACC,GAAD,OAC3BkG,YAAa,CACX3C,KAAM,CACJ2G,SAAU,GAEZC,QAAU,CACRlG,QAAQ,OACRC,eAAe,iBAEjBkG,SAAW,CACTnG,QAAQ,OACRE,WAAW,eAKF,SAASkG,KACtB,IAAM3J,EAAUZ,KACVlF,EAAW8H,aAAY5H,GAE7B,OACE,sBAAKqG,UAAWT,EAAQ6C,KAAxB,SACE,eAAC+G,GAAA,EAAD,CAAQjD,SAAS,SAAjB,SACE,gBAACkD,GAAA,EAAD,CAAShD,QAAQ,QAAQpG,UAAWT,EAAQyJ,QAA5C,UACI,gBAACvE,EAAA,EAAD,CAAY2B,QAAQ,KAAKhD,MAAM,UAAUwE,QAAM,EAA/C,yBACgBnO,EAASjB,OAAS,EAAlB,WAA2BiB,EAA3B,KAAyC,MAE3D,uBAAKuG,UAAWT,EAAQ0J,SAAxB,UACE,eAACf,GAAD,IACA,eAACrB,GAAD,IACA,eAACrB,GAAD,c,aCrCN7G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCwK,QAAS,CACLnD,SAAU,WACVK,KAAM,OACNC,OAAQ,MACRrD,SAAW,OACXC,MAAQvE,EAAM8D,QAAQC,QAAQ0G,MAElCC,OAAQ,CACJrD,SAAU,WACVO,MAAO,MACPH,IAAK,WA4BEkD,GArBK,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,OACxBpK,EAAUZ,KAIhB,OACI,uCACCgL,GAAUD,GACP,sBAAK1J,UAAWT,EAAQgK,OAAxB,SACI,oBAAGzI,KAAM4I,EAAT,SACI,sBAAK3K,MAAM,MAAMsD,OAAO,MAAMuH,IAAI,8FAA8FC,IAAI,0BAIhJ,sBAAK7J,UAAWT,EAAQ8J,QAASlJ,QAZjB,WACZuJ,GAA+B,KAApBI,GAAWC,OAAe5R,OAAO6R,SAASlJ,KAAO4I,EAAQ,SAASI,GAAWC,OAW5F,SACI,6BAAIN,EAAQK,GAAWT,gB,qEC5BjCY,GAAgB,0BAChBC,GAAoB,OAkDXC,GAhDC,WAAK,IAAD,EACK3K,oBAiDzB,WACI,IAAI4K,GAAS,EACb,IACI,IAAI/D,EAAQgE,aAAaC,QAAQL,IAC7B5D,IACA+D,EAAU/D,IAAQ6D,IAExB,UAGF,OAAOE,EA3DiCG,IADxB,mBACXC,EADW,KACNC,EADM,KAGVC,EAAU,WACZD,GAAQ,IAQZ,OACA,gBAACE,GAAA,EAAD,CACIH,KAAMA,EACNE,QAASA,EACTE,kBAAgB,qBAChBC,mBAAiB,2BACjBC,SAAS,KALb,UAOI,eAACC,GAAA,EAAD,CAAanP,GAAG,qBAAhB,SAAsC,gBACrC,gBAACoP,GAAA,EAAD,WACG,gBAACC,GAAA,EAAD,CAAmBrP,GAAG,2BAAtB,4GAC+F,oBAAGkF,KAAK,+DAAR,iBAD/F,2EAE4C,2DAF5C,mCAE4G,wCAF5G,KAE2H,wBAAK,wBAFhI,iEAG8D,oBAAGA,KAAK,gCAAR,yDAH9D,QAMKoK,aACG,eAACD,GAAA,EAAD,CAAmBrP,GAAG,2BAA2ByD,MAAM,SAAvD,SACI,yBAAQN,MAAM,MAAMsD,OAAO,MAAMuH,IAAI,4CAA4CuB,MAAM,aAAaC,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,MAIhP,gBAACL,GAAA,EAAD,CAAmBrP,GAAG,2BAAtB,UACI,iEADJ,qBACkD,6BAAG,4CADrD,wGAIJ,gBAAC2P,GAAA,EAAD,WACA,eAACC,GAAA,EAAD,CAAQrL,QAASuK,EAAStH,MAAM,UAAhC,mBAGA,eAACoI,GAAA,EAAD,CAAQrL,QAnCM,WACduK,IAuDR,WACI,IACIL,aAAaoB,QAAQxB,GAAgBC,IACvC,WAzDEwB,IAiC4BtI,MAAM,UAAUuI,WAAS,EAArD,oCCnCR,IAAM9M,GAAQ+M,YAAe,CAC3BjJ,QAAS,CACPC,QAASiJ,IACTC,UAAW,CACTxC,KAAM,QAERpK,WAAY,CACVlH,QAAS,WAuCA+T,gBAlCsC,SAAAlN,GAAK,OACxDkG,YAAa,CACXiH,IAAK,CACH3I,UAAW,UAEbiG,KAAM,CACJpD,SAAS,WACTI,IAAI,OACJG,MAAO,MACPF,KAAK,MACLC,OAAQ,MACRtH,WAAa,QACb4D,QAAS,OACTC,eAAgB,SAChBC,WAAY,cAoBH+I,EAdH,SAAC,GAAD,IAAGxM,EAAH,EAAGA,QAAH,OACV,gBAAC,IAAD,CAAkBV,MAAOA,GAAzB,UACE,eAACoN,EAAA,EAAD,IACA,uBAAKjM,UAAWT,EAAQyM,IAAxB,UACE,eAAC9C,GAAD,IACA,sBAAKlJ,UAAWT,EAAQ+J,KAAxB,SACE,eAAC/F,GAAD,MAEF,eAAC,GAAD,CAAYkG,MAAM,aAAaE,QAAQ,EAAOD,QAAQ,mDACtD,eAAC,GAAD,aCzDOwC,GAAQC,YAAe,CAClCtS,QAAS,CACPb,WAAYoT,EACZxU,KAAMsC,EACNT,SAAUG,KCKMyS,QACW,cAA7BlU,OAAO6R,SAASsC,UAEe,UAA7BnU,OAAO6R,SAASsC,UAEhBnU,OAAO6R,SAASsC,SAAS9Q,MACvB,2DCVN,IACM+Q,GAAW,IAAIC,KAAS,oBAAgBlR,OAAWA,EADzC,MAGN,uCAAG,sBAAAxD,EAAA,sEACLyU,GAASE,aADJ,OAEXC,IAASC,OACP,eAAC,KAAD,CAAUT,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFU,SAASC,eAAe,SANf,2CAAH,qDAWVvD,GDkHM,kBAAmBwD,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA3J,GACL/K,QAAQ+K,MAAMA,EAAM4J,a,yIE9I5B,IAAmYC,EAA/XC,EAAO,EAAQ,KAAWA,KAAKpW,EAAS,EAAQ,KAAoVF,EAAOC,QAAU,SAASsW,IAAK,OAAI7V,gBAAgB6V,EAAUD,EAAKpW,KAAiBmW,IAASA,EAAOC,EAAKpW,S","file":"static/js/main.0fa5c19b.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"05a5069ab37953881250.worker.js\");\n};","/* eslint-disable import/no-webpack-loader-syntax */\nimport comlinkWorker from 'comlink-loader!./bWorker'\nimport BackgroundWorker, {BackWorkerClassConstructors, SnpVal} from './bWorker'\nimport { PopulationType } from '../../../genomeLib/frequencyEvaluator'\nimport { snp } from '../../../genomeLib/snps'\n\n\nconst BackWorkerFactory = new comlinkWorker<BackWorkerClassConstructors>()\n\nexport type Progress = (values : SnpVal[] ) => void\n\n interface IDataQuery {\n     snps : snp [],\n     type  : PopulationType\n }\n const Timer = 200 // in ms\n/**\n * Foreground worker class. This class is designed to work  on the UI Javascript thread\n */\nexport default class ForegroundWorker {\n\n    private worker : BackgroundWorker | null = null // null when no computation is occurring\n    private data : IDataQuery | null = null // null when no comptation is reqested\n    private timerID : number | null= null // null when not defined.\n    private progress : Progress\n\n    constructor( progress : Progress ){\n        this.progress = progress\n    }\n\n    async start( snps : snp[], type : PopulationType ) : Promise<void> {\n        if( this.worker ) throw Error(`foreground worked invoked while processing.`)\n        this.data = { snps, type }\n        this.worker = await new BackWorkerFactory.default(this.data.type)\n        this.worker.start(this.data.snps)\n        this.startWorker()\n    }\n\n    stop(){\n        if( this.timerID ) window.clearTimeout( this.timerID )\n        this.timerID = null\n        this.data = null\n    }\n\n    private async startWorker() : Promise<void> {\n\n        this.worker!.start(this.data!.snps)\n\n        const doWork = async ()=> {\n            if( this.data && this.worker ){\n                this.timerID = null\n                let res = await this.worker.Next()\n                if( this.data && this.worker ){ // need to re test becase ight have changed in the await above.\n                    if( res.length > 0 ){\n                        this.progress(res)\n                        this.timerID = window.setTimeout(doWork, Timer)\n                    } else {\n                        this.worker = null // we have completed.\n                        console.log('Completly Done...')\n                    }\n                }\n            }\n        }\n\n        doWork()\n    }\n\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store'\nimport {PopulationType} from '../../genomeLib/frequencyEvaluator'\nimport { SnpVal } from './appWorker/bWorker';\n\n/*\n *\n * Population Type Slide\n *  \n*/\n\ninterface PopulationTypeState {\n    population : PopulationType\n  }\n  \n  const initialPoplationTypeState: PopulationTypeState = {\n    population : 'European'\n  };\n\n  export const populationTypeSlice = createSlice({\n    name: 'PopulationType',\n    initialState: initialPoplationTypeState,\n    reducers: {\n        setPopulation : ( state, action : PayloadAction<PopulationType> ) => {\n            state.population = action.payload\n        }\n      }\n    })\n  \n  export const {setPopulation} = populationTypeSlice.actions;\n  export const selecPopulation= (state: RootState) => state.population.population\n  export default populationTypeSlice.reducer;\n\n  /*\n *\n * Filename\n *  \n*/\n\ninterface FilenameTypeState {\n  filename : string\n}\n\nconst initialFilenameState: FilenameTypeState = {\n  filename : ''\n};\n\nexport const filenameSlice = createSlice({\n  name: 'Filename',\n  initialState: initialFilenameState,\n  reducers: {\n      setFilename : ( state, action : PayloadAction<string> ) => {\n          state.filename = action.payload\n      }\n    }\n  })\n\nexport const {setFilename} = filenameSlice.actions;\nexport const selecFilename= (state: RootState) => state.filename.filename\nexport const filenameReducer= filenameSlice.reducer;\n\n/*\n *\n * Snps Slide\n *  \n */\n  export interface SnpEl {\n    val  : SnpVal,\n    done : boolean\n}\n\n  interface SnpsState {\n    list : SnpEl[]\n  }\n  \n  const initialState: SnpsState = {\n    list : []\n  };\n\n  export const snpsSlice = createSlice({\n    name: 'Snps',\n    initialState,\n    reducers: {\n        setSnps : ( state, action : PayloadAction<SnpEl[]> ) => {\n            state.list  = action.payload\n        }\n      }\n    })\n  \n  export const { setSnps } = snpsSlice.actions;\n  export const selectSnps= (state: RootState) => state.snps\n  export const snpsReducer= snpsSlice.reducer;\n\n/*\n *\n * Thresholds for freqency\n *  \n */\nexport const midThreshold = 0.5\nexport const lowThreshold = 0.25\nexport const midColor = \"#FFFAAA\"\nexport const lowColor = \"#FFAAAA\"\nexport const higColor = \"#A0A0FF\"\nexport const noColor  = \"#FFFFFF\"\nexport const unkColor = \"#AAAAAA\"\n\n/*\n *\n * Default Sorting\n *  \n */\nexport type TableHeaderSortType = 'ID' | 'Chromosome' | 'Base' | 'Frequency' | 'Publications' \nexport type SortDirection = 'asc' | 'desc'\nexport const defaultSortField = 'Frequency'\nexport const defaultSortOrder = 'asc' \n\n\n","import * as fs from 'fs'\n\n\nexport interface snp {  // tslint:disable-line\n    id : string,\n    chr: string, \n    bases : string\n}\n\nexport default class SNPs {  // tslint:disable-line\n\n    private list : snp []\n\n    constructor ( text : string, chrs? : string[] ){\n        this.list = []\n        let lines = text.split('\\n')\n        lines.forEach((line)=>{\n            if( line.startsWith(\"rs\")) {\n                let items = line.split(\"\\t\").map((v)=>v.trim())\n                if( items.length === 4 ){\n                    let chr = items[1].toUpperCase()\n                    if( chrs === undefined || chrs.findIndex(v=>v===chr) >=0  ){\n                        if( items[3].match(/[AGCT]/) && !Number.isNaN(Number(items[2]))){\n                            this.list.push ({\n                                id : items[0],\n                                chr,\n                                bases : items[3].toUpperCase()\n                            })\n                        }\n                    }\n                }\n            }\n        })\n    }\n\n    get snpList() : snp [] {\n        return this.list\n    }\n\n    snpChromosome(chr:string) : snp [] {\n        chr = chr.trim().toUpperCase()\n        return this.list.filter((v)=>v.chr===chr)\n    }\n\n    static async fromFile( file : string ) : Promise<SNPs> {\n        if ( fs.existsSync(file)){\n            return new Promise((res,rej)=>{\n                fs.readFile(file, {}, (err, data)=>{\n                    if( err ) rej(err)\n                    let obj = new SNPs(data.toString())\n                    res(obj)\n                })\n            })\n        } else {\n            throw new Error(`file ${file} noy found!`)\n        }\n    }\n\n\n}","import ForegroundWorker from './appWorker/fWorker'\nimport {defaultSortField, defaultSortOrder, SortDirection, TableHeaderSortType, SnpEl} from './appMainSlice'\nimport {PopulationType} from '../../genomeLib/frequencyEvaluator'\nimport { SnpVal } from './appWorker/bWorker'\nimport Snps ,{snp} from '../../genomeLib/snps'\n\nexport type Update = (list :SnpEl[] ) => void\n\nconst sortFunctions = {\n    ID : sortByID,\n    Chromosome : sortByChr,\n    Base : sortByBase,\n    Frequency : sortByPerc,\n    Publications : sortByPub\n}\n\nexport default class SnpList {\n\n    private worker : ForegroundWorker | null = null\n    private update : Update\n    private list : SnpEl [] = []\n    private sortId : TableHeaderSortType = defaultSortField\n    private sortDir: SortDirection = defaultSortOrder\n\n    constructor( update : Update ) {\n        this.update = update\n    }\n\n    start( data : string, type : PopulationType  ){\n        if( this.worker ) this.worker.stop()\n        const progress = ( vals : SnpVal[] )=>{\n            this.merge(vals)\n            if( this.sortId === 'Frequency' || this.sortId === 'Publications')  this.doSort()\n            this.sendUpdate()\n        }\n        let list = new Snps(data,[\"Y\",\"MT\"])\n        this.list= list.snpList.map(v=>this.toSnpEl(v))\n        this.doSort()\n        this.worker = new ForegroundWorker(progress)\n        this.worker.start(list.snpList, type)\n    }\n\n    sort( id : TableHeaderSortType, dir : SortDirection ){\n        this.sortId = id\n        this.sortDir= dir\n        this.doSort()\n        this.sendUpdate()\n    }\n\n    private doSort() {\n        let d  = this.sortDir === 'asc' ? 1 : -1\n        this.list = this.list.sort((a,b)=>d*sortFunctions[this.sortId](a.val,b.val))\n    }\n\n    private sendUpdate(){\n        let clone = this.list.map(e=>({done:e.done, val: {...e.val}})) //  deep clone\n        this.update(clone)\n    }\n\n    private merge(vals : SnpVal []) {\n        this.list.forEach( el =>{\n            if( !el.done ){\n                let val = vals.find(v=>el.val.snp.id === v.snp.id)\n                if( val ){\n                    el.done = true\n                    el.val.perc = val.perc\n                    el.val.pub = val.pub\n                }\n            }\n        })\n    }\n\n    private toSnpEl( s : snp ) : SnpEl {\n        return {\n            val : {\n                snp: s,\n                perc : null,\n                pub : 0\n            },\n            done : false\n        }\n    }\n}\n\nfunction sortByID( a : SnpVal, b : SnpVal ): number {\n    let v1 = parseInt(a.snp.id.substr(2))\n    let v2 = parseInt(b.snp.id.substr(2))\n    return  v1-v2\n}\n\nfunction sortByChr( a : SnpVal, b : SnpVal ) : number {\n    return sortByTextField(a,b,'chr')\n}\n\nfunction sortByBase(a : SnpVal, b : SnpVal ) : number {\n    return sortByTextField(a,b,'bases')\n}\n\nfunction sortByTextField(a : SnpVal, b : SnpVal, type : keyof snp) : number {\n    let v1 = a.snp[type]\n    let v2 = b.snp[type]\n    return  v1>v2 ? 1 : -1\n}\n\nfunction sortByPerc(a : SnpVal, b : SnpVal ) : number {\n    let v1 = a.perc ?? 2\n    let v2 = b.perc ?? 2\n    return v1-v2\n}\n\nfunction sortByPub(a : SnpVal, b : SnpVal ) : number {\n    return  a.pub-b.pub\n}\n\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableCell, TableHead, TableRow, TableSortLabel } from \"@material-ui/core\";\nimport { TableHeaderSortType, SortDirection, defaultSortOrder, defaultSortField } from \"./appMainSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width:\"100%\"\n      },\n      container: {\n      },\n      header :{\n          background:\"#FAFAFA\",\n          fontWeight: \"bold\"\n      }\n}))\n\n\ntype AlignType = 'left' | 'right'\ntype OnListSort = ( id : TableHeaderSortType, dir : SortDirection ) => void\ninterface TableHeader {\n    id : TableHeaderSortType,\n    align : AlignType\n    text : string\n}\nconst TableHeaders : TableHeader [] = [\n    {\n        id : 'ID',\n        align : 'left',\n        text : \"SNP id\"\n    },\n    {\n        id : 'Chromosome',\n        align : 'right',\n        text : 'Chromosome'\n    },\n    {\n        id : 'Base',\n        align : 'right',\n        text : 'Base'\n    },\n    {\n        id : 'Frequency',\n        align : 'right',\n        text : 'Frequency'\n    },\n    {\n        id : 'Publications',\n        align :'right',\n        text : 'Publications'\n    }\n]\n\ninterface SnpsTableHeadProps {sort : OnListSort }\n\nexport default function AppTableHeader ({sort} : SnpsTableHeadProps) {\n    const classes = useStyles();\n    const [orderBy, setOrderBy] = useState<TableHeaderSortType>(defaultSortField)\n    const [direction, setDirection] = useState<SortDirection>(defaultSortOrder)\n    const onClick = (id : TableHeaderSortType) => {\n        let dir : SortDirection = 'asc'\n        if( orderBy === id ){\n            dir = direction === 'asc' ? 'desc' : 'asc'\n        } \n        setOrderBy(id)\n        setDirection(dir)\n        sort(id, dir)\n    }\n    return(\n        <TableHead>\n        <TableRow>\n            {\n                TableHeaders.map(header=>(\n                    <TableCell align={header.align}  className={classes.header} key={header.id}>\n                        <TableSortLabel\n                            active={orderBy===header.id}\n                            direction={direction}\n                            onClick={()=>onClick(header.id)}\n                            >\n                            {header.text}\n                        </TableSortLabel>\n                    </TableCell>\n                ))\n            }\n        </TableRow>\n      </TableHead>\n    )\n}\n","import React  from \"react\";\nimport { TableBody, TableCell, TableRow } from \"@material-ui/core\";\nimport { midColor, lowColor, midThreshold, lowThreshold, SnpEl, noColor, unkColor, higColor } from \"../appMain/appMainSlice\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n     undefined :{\n        background: unkColor,\n      },\n      novalue : {\n        background: noColor,\n      },\n      high : {\n        background: higColor,\n      },\n      mid : {\n        background: midColor,        \n      },\n      low : {\n        background: lowColor,        \n      }\n}))\n\ninterface SnpsTableBodyProps { list : SnpEl [] }\n\nexport default function AppTableBody( { list } : SnpsTableBodyProps) {\n    const classes = useStyles();\n    const classSelector = ( el : SnpEl ) : string => {\n        let val = classes.undefined\n        if( el.done ){\n            if( el.val.perc !== null ){\n                val = classes.high\n                if( el.val.perc < midThreshold ) val = classes.mid\n                if( el.val.perc < lowThreshold ) val = classes.low\n    \n            } else {\n                val = classes.novalue\n            }\n        }\n        return val\n    }\n    return (\n        <TableBody>\n        {list.map((el) => (\n          <TableRow key={el.val.snp.id} className={classSelector(el)}>\n            <TableCell component=\"th\" scope=\"row\"><a  target='_blank' href={`https://www.ncbi.nlm.nih.gov/snp/${el.val.snp.id}`} rel=\"noreferrer\">{el.val.snp.id}</a></TableCell>\n            <TableCell align=\"right\">{el.val.snp.chr}</TableCell>\n            <TableCell align=\"right\">{el.val.snp.bases}</TableCell>\n            <TableCell align=\"right\">{el.val.perc !== null ? el.val.perc.toFixed(2) : \"-\"}</TableCell>\n            <TableCell align=\"right\">{el.val.pub} </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    )\n}","import React, { useEffect, useRef } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Table, TableContainer } from \"@material-ui/core\";\nimport SnpList from './snpList'\nimport { setSnps, selectSnps, SnpEl, selecPopulation, TableHeaderSortType, SortDirection  } from \"./appMainSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppTableHeader from './appTableHeader'\nimport AppTableBody from './appTableBody'\nimport { useGA4React } from \"ga-4-react\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width:\"100%\"\n      },\n      container: {\n      }\n}))\n\n// need to use this mode for usign function calc\nconst containerStyle = {maxHeight: 'calc(100% - 2em)'}\n\ninterface AppTableProps { data : string }\n\n\nexport default function AppTable({ data } : AppTableProps) {\n    const classes = useStyles()\n    let worker = useRef<SnpList|null>(null)\n    const dispatch= useDispatch();\n    const snps = useSelector(selectSnps)\n    const type = useSelector(selecPopulation)\n    const ga = useGA4React()\n\n    useEffect(()=>{\n        const update = (list : SnpEl [] ) =>{\n            dispatch(setSnps(list))\n        }\n        if(!worker.current) worker.current = new SnpList(update)\n        worker.current.start(data,type)\n    },[data, dispatch,type])\n\n\n    const onSort = ( id : TableHeaderSortType, dir : SortDirection) =>{\n        if( worker.current ) worker.current.sort(id, dir )\n        if(ga) ga.event('Data Sort', id, '')\n    }\n\n    return (\n            <TableContainer component={Paper} className={classes.container} style={containerStyle}>\n                <Table className={classes.table} size=\"small\" stickyHeader aria-label=\"simple table\">\n                    <AppTableHeader sort={onSort}/>\n                    <AppTableBody list={snps.list}/>\n                </Table>\n            </TableContainer>\n    )\n}\n","import React, {useState, useCallback, useEffect} from 'react'\nimport  { useDropzone } from \"react-dropzone\"\nimport { FileWithPath } from \"file-selector\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Typography from '@material-ui/core/Typography';\nimport SnpTable from './appTable'\nimport { useDispatch } from 'react-redux';\nimport { setFilename } from './appMainSlice';\nimport { useGA4React } from 'ga-4-react';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n            width:'100%',\n            height:'100%',\n            padding:'4px'\n        },\n        drop :{\n            width:'100%',\n            height:'100%',\n            borderWidth:'2px',\n            borderStyle: 'dotted',\n            borderColor: theme.palette.primary.light,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n            \"&:hover\": {\n                borderColor: theme.palette.primary.dark\n              },\n            \"& .AddIcn\" :{\n                fontSize:80,\n                color: theme.palette.primary.light\n            },\n            \"&:hover .AddIcn\" :{\n                fontSize:80,\n                color: theme.palette.primary.dark\n            },\n            \"& .text\" :{\n            textAlign:'center',\n            color:theme.palette.primary.light \n            },\n            \"&:hover .text\" :{\n                textAlign:'center',\n                color:theme.palette.primary.dark \n            }\n        },\n        noDisplay : {\n            display:'none'\n        }\n    }))\n\n    export default function AppMain(){\n        const classes = useStyles();\n        const [text, setText] = useState<string|null>(null)\n        const [error, setError] = useState<string|null>(null)\n        const dispatch = useDispatch()\n        const ga = useGA4React()\n\n        useEffect(()=>{\n            if( ga ) ga.pageview('main')\n        },[]) // eslint-disable-line  -- ga not added on purpose\n\n        const onDrop = useCallback(async (files: FileWithPath[]) =>  {\n            let list = files.filter((file)=>file.path && (file.path.toLowerCase().endsWith('.txt')||file.path.toLowerCase().indexOf('.23andme.')>0))\n            if( list.length > 0 ) {\n                let file = list[0]\n                let data = await readFile(file)\n                if( sanityCheck(data)){\n                    setText(data)\n                    dispatch(setFilename(file.name))\n                    if(ga) ga.event('Valid File Load', 'valid file', '')\n                } else {\n                    setText(null)\n                    setError(`${file.name} is not valid`)\n                    if(ga) ga.event('Invalid File Content', 'invalid file content', '')\n                }\n            } else {\n                setText(null)\n                setError(`unable to load ${files[0].name}`)\n                if(ga) ga.event('Invalid File Type', 'invalid file type', '')\n            }\n        }, [setText, dispatch]) // eslint-disable-line  -- ga not added on purpose\n\n        const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n    \n        return (\n            <div className={classes.root}>\n                    <div {...getRootProps()} className={classes.root}>\n                            <div className={ isDragActive ? classes.drop : classes.noDisplay}>\n                                <ArrowDownwardIcon className=\"AddIcn\"/>\n                                <Typography className=\"text\">Drop the file here.</Typography>\n                            </div> \n                            {\n                                text !== null ?\n                                <>\n                                    <SnpTable data={text}/>\n                                </> :\n                                <div className={isDragActive ? classes.noDisplay : classes.drop}>\n                                    <input {...getInputProps()} />\n                                    <AddIcon className=\"AddIcn\"/>\n                                    {\n                                        error !== null ?\n                                        <>\n                                            <Typography className=\"text\">🖐 {error}</Typography>\n                                        </> :\n                                        <></>\n                                    }   \n                                    <>\n                                        <Typography className=\"text\">Drag and Drop here your 23andme txt file.</Typography>\n                                        <Typography className=\"text\">or click here to select the file.</Typography>\n                                    </>\n                                </div> \n                            }\n                    </div>\n            </div>\n        )\n    }\n\n    async function readFile ( file : FileWithPath ) : Promise<string> {\n        return new Promise((res)=>{\n            let reader = new FileReader()\n            reader.onloadend = ()=> res(reader.result as string)\n            reader.readAsText(file)\n        })\n    }\n\n    // Sanity check that the file is a valid\n    // 23andme SNP file.\n    const key1 = \"This data file generated by 23andMe\"\n    const key2 = \"# rsid\tchromosome\tposition\tgenotype\"\n    function sanityCheck(data:string) : boolean {\n        return data.indexOf(key1) > 0 && data.indexOf(key2) > 0\n    }\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectSnps } from '../appMain/appMainSlice'\nimport { Box, CircularProgress, createStyles, makeStyles, Theme, Typography } from '@material-ui/core'\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cirProgress: {\n      marginRight: theme.spacing(2),\n      color:'#0000FF',\n    },\n    txtProgress: {\n        marginRight: theme.spacing(2),\n        color:'#0000FF',\n    },\n    cirHidden: {\n        marginRight: theme.spacing(2),\n        color:'transparent',    \n    },\n    textHidden:{\n        display:'none'\n    },\n    iconDisplay:{\n        color : 'white'\n    },\n    iconHidden:{\n        display: 'none'\n    }\n  }),\n);\n\n\nexport default function AppProgress() {\n    const classes = useStyles();\n    const snps    = useSelector(selectSnps)\n    let todo = 0\n    let done = 0\n    snps.list.forEach( v => v.done ? done++ : todo++)\n    let total = done+todo\n    const showProgres = total > 0 &&  todo > 0\n    const percentage  = showProgres ? done/total * 100 : 0\n    const progVariant = percentage > 0 ? \"determinate\" : \"indeterminate\";\n    const progLabel   = percentage > 0 ? `${Math.round(percentage)}%` : ``\n    return(\n        <>\n            <Box position=\"relative\" display=\"inline-flex\">\n                <CircularProgress className={ showProgres ? classes.cirProgress : classes.cirHidden} variant={progVariant} value={percentage} /> \n                <Box\n                    top={0}\n                    left={0}\n                    bottom={0}\n                    right={0}\n                    position=\"absolute\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                >\n                <CheckCircleRoundedIcon className={ showProgres ? classes.iconHidden : total > 0 ? classes.iconDisplay : classes.iconHidden} fontSize='large' />\n                <Typography variant=\"caption\" component=\"div\" className={ showProgres ?  classes.txtProgress : classes.textHidden}>{progLabel}</Typography>\n                </Box>\n            </Box>\n        </>\n    )\n}\n\n\n\n\n\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector } from 'react-redux';\nimport { Box } from '@material-ui/core';\nimport { midColor, lowColor, midThreshold, lowThreshold, noColor, unkColor, higColor, selectSnps } from \"../appMain/appMainSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      marginRight: theme.spacing(2),\n    },\n    boxHidden :{\n      display : 'none'\n    },\n    boxDisplay :{\n      display : 'inline-flex'\n    }\n  }),\n);\n\nexport default function AppInfo() {\n  const classes = useStyles();\n  const snps    = useSelector(selectSnps)\n  let hPerc=0\n  let mPerc=0\n  let lPerc=0\n  let uPerc=0\n  let nPerc=0\n\n  snps.list.forEach( snp => snp.done ? \n        (snp.val.perc !== null ? (snp.val.perc < lowThreshold ? lPerc++ : ( snp.val.perc < midThreshold ? mPerc++ : hPerc++)) : uPerc++ ) \n        : nPerc++ )\n\n   const values = [lPerc, mPerc, hPerc, uPerc, nPerc]   \n   const total = values.reduce((t,v)=>t+v,0)\n   const perc = toPersentages( values )\n   const colors = [lowColor, midColor, higColor, noColor, unkColor]\n\n  return (\n\n    <Box position=\"relative\" className={total >0 ? classes.boxDisplay : classes.boxHidden}>\n      <Typography align='center' variant=\"caption\" color='secondary' className={classes.margin} noWrap> {`${total} Snps, ${lPerc} low frequency`}</Typography>\n      <Box\n          top={20}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          className={classes.margin}\n      >\n        {\n          perc.map((el,index)=>(\n            <div style={{background: colors[index], position:'relative', width: el, height:'5px'}} key={index}/>\n          ))\n        }\n      </Box>\n    </Box>\n\n  );\n}\n\nfunction toPersentages(values : number [] ) : string [] {\n  let ret : string [] = []\n  let sum = values.reduce((s,v)=>s+v,0)\n  if( sum > 0 ){\n    let per = values.map(v=>Math.floor(100*v/sum))\n    let err = 100 - per.reduce((s,v)=>s+v,0) // error in roundinng. Must be positive\n    per[per.length-2] += err // to make sure that rounds up to 100\n    ret = per.map(v=>`${v}%`)\n  }\n  return ret\n}","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { selecPopulation as selectPopulation, setPopulation } from '../appMain/appMainSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MenuItem, TextField } from '@material-ui/core';\nimport { PopulationType } from '../../genomeLib/frequencyEvaluator';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    combobox: {\n      marginRight: theme.spacing(2),\n      background: 'transparent'\n    },\n    textColor :{\n        color : 'white',\n        borderWidth: '1px',\n        borderColor: 'white !important'\n    },\n    icon: {\n        fill: 'white',\n    },\n  }),\n);\n\nexport default function AppSelector() {\n    const classes = useStyles();\n    const type  = useSelector(selectPopulation)\n    const dispatch = useDispatch()\n\n    const options : string [] = ['European', \"African\", \"East Asian\", \"South Asian\"]\n    const types : PopulationType[]   = ['European', 'African', 'SAsian', 'EAsian']\n    const typeName= options[types.indexOf(type)]\n    return (\n\n        <TextField className={classes.combobox}  variant='outlined' size='small'\n            select\n            value={typeName}\n            onChange={(e)=>{\n                let val = types[options.indexOf(e.target.value ?? 'European')]\n                dispatch(setPopulation(val))\n            }}\n            InputProps={{\n                classes: {\n                    root: classes.textColor,\n                    notchedOutline: classes.textColor\n                  }\n            }}\n            SelectProps={{\n                classes: { icon: classes.icon },\n              }}\n        >\n            {options.map((option) => (\n                <MenuItem key={option} value={option}  >\n                    {option}\n                </MenuItem>\n            ))}\n      </TextField>\n    )\n}","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AppProgress from './appProgress'\nimport AppInfo from './appInfo'\nimport { useSelector } from 'react-redux';\nimport { selecFilename } from '../appMain/appMainSlice';\nimport AppSelector from './appSelector';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    toolbar : {\n      display:'flex',\n      justifyContent:'space-between'\n    },\n    toolList : {\n      display:'flex',\n      alignItems:'center'\n    }\n  }),\n);\n\nexport default function AppToolbar() {\n  const classes = useStyles();\n  const filename = useSelector(selecFilename)\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\" className={classes.toolbar}>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              SNPs and Me { filename.length > 0  ? `[${filename}]` : ''}\n            </Typography>\n          <div className={classes.toolList}>\n            <AppSelector/>\n            <AppInfo/>\n            <AppProgress/>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from \"react\";\nimport gitVersion from '../../tools/gitInfo.json'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    version: {\n        position: 'absolute', \n        left: '14px', \n        bottom: '0px',\n        fontSize : '12px',\n        color : theme.palette.primary.main\n    },\n    ribbon :{\n        position: 'absolute', \n        right: '0px', \n        top: '0px'\n    }\n}))\n\n\ntype gitInfoProps = { label : string, baseURL? : string, forkme : Boolean }\n\nconst  AppVersion = ({label, baseURL, forkme}:gitInfoProps) => {\n        const classes = useStyles();\n        const handleClick = () => {\n            if( baseURL && gitVersion.long !== \"\" )  window.location.href = baseURL+'/tree/'+gitVersion.long;\n        }\n        return ( \n            <>\n            {forkme && baseURL && (\n                <div className={classes.ribbon}> \n                    <a href={baseURL}>\n                        <img width=\"100\" height=\"100\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_red_aa0000.png?resize=100%2C100\" alt=\"Fork me on GitHub\"/>\n                    </a>\n                </div>\n            ) }\n            <div className={classes.version} onClick={handleClick}>\n                <p>{label + gitVersion.version}</p>\n            </div>\n            </>\n        )\n}\n\nexport default AppVersion;","import React, {useState}  from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {isMobile} from 'react-device-detect';\n\nconst localStorageKey=\"SnpsAndMeHelpReadStatus\";\nconst localStorageValue = \"Read\";\n\nconst MapHelp = ()=>{\n    let [open,setOpen] = useState<boolean>(!getReadHelpStatus());\n\n    const onClose = () =>{\n        setOpen(false);\n    }\n\n    const onDismiss = ()=>{\n        onClose();\n        setReadHelpStatus()\n    }\n\n    return (\n    <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        maxWidth='lg'\n    >\n        <DialogTitle id=\"alert-dialog-title\">{\"SNPs and Me\"}</DialogTitle>\n         <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n            Drag and drop your 23andme file and the browser will color code the part of the genome (called <a href='https://en.wikipedia.org/wiki/Single-nucleotide_polymorphism'>SNP</a>) based on their frequency.\n            You will be able to find the part which are <i>rare among the population</i> and so the ones which make you <i>unique</i> !<br/><br/>\n            Click on the SNP ID to find out information about it from the <a href=\"https://www.ncbi.nlm.nih.gov/\">National Center for Biochnology Information</a>.\n            </DialogContentText>\n            {\n                !isMobile && (\n                    <DialogContentText id=\"alert-dialog-description\" align='center' >\n                        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/lUS8Q2-EbyY\" title=\"Snp and me\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </DialogContentText>\n                )\n            }\n            <DialogContentText id=\"alert-dialog-description\">\n                <b>🖐 Privacy Statement:</b> this application <u><i>does not</i></u> store nor transmit your genomic information. All the analysis is done locally in your browser.\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n            close\n        </Button>\n        <Button onClick={onDismiss} color=\"primary\" autoFocus>\n            dismiss forever\n        </Button>\n     </DialogActions> \n      </Dialog>);\n}\nexport default MapHelp;\n\nfunction getReadHelpStatus(){\n    let isRead = false\n    try {\n        let value = localStorage.getItem(localStorageKey);\n        if( value ){\n            isRead = (value===localStorageValue);\n        }\n    } catch {\n        // ignore\n    }\n    return isRead\n}\n\nfunction setReadHelpStatus(){\n    try {\n        localStorage.setItem(localStorageKey,localStorageValue);\n    } catch {\n        // ignore\n    }\n\n}\n","import React from \"react\";\nimport {\n  createMuiTheme,\n  withStyles,\n  createStyles,\n  Theme,\n  WithStyles,\n  StyleRules\n} from \"@material-ui/core/styles\";\nimport {\n  MuiThemeProvider,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport AppMain from  './features/appMain/appMain';\nimport AppToolbar from './features/appToolbar/appToolbar'\nimport AppVersion from './features/appVersion/appVersion'\nimport AppHelp from './features/appHelp/appHelp'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: {\n      main: \"#fff\"\n    },\n    background: {\n      default: \"#fff\"\n    }\n  }\n});\n\nconst styles: (theme: Theme) => StyleRules<string> = theme =>\n  createStyles({\n    app: {\n      textAlign: \"center\" \n    },\n    main :{\n      position:'absolute',\n      top:'55px',\n      right: '0px',\n      left:'0px',\n      bottom: '0px',\n      background : 'white',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n  });\n\ntype AppProps = {} & WithStyles<typeof styles>;\n\nconst App = ({ classes }: AppProps) => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <div className={classes.app}>\n      <AppToolbar/>\n      <div className={classes.main}>\n        <AppMain />\n      </div>\n      <AppVersion label=\"version : \" forkme={false} baseURL=\"https://github.com/VittorioAccomazzi/snpsandme\" />\n      <AppHelp/>\n    </div>\n  </MuiThemeProvider>\n);\n\nexport default withStyles(styles)(App);\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport populationReducer, {snpsReducer, filenameReducer} from '../features/appMain/appMainSlice';\n\nexport const store = configureStore({\n  reducer: {\n    population: populationReducer,\n    snps: snpsReducer,\n    filename: filenameReducer\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport GA4React from 'ga-4-react'\n\nconst timeout = 30000 // millisecond.\nconst ga4react = new GA4React(\"G-QK0MGYD60T\", undefined, undefined, timeout);\n\nconst main = async ()=>{\n  await ga4react.initialize();\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n}\n\n// Start the appliction\nmain()\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var wrap = require('comlink').wrap,Worker = require(\"!worker-loader?{}!/Users/vittorio/Documents/Personal/Project/snpsandme/node_modules/comlink-loader/dist/comlink-worker-loader.js!/Users/vittorio/Documents/Personal/Project/snpsandme/node_modules/babel-loader/lib/index.js??ref--5-oneOf-2!/Users/vittorio/Documents/Personal/Project/snpsandme/src/features/appMain/appWorker/bWorker.ts\"),inst;module.exports = function f() {if (this instanceof f) return wrap(Worker());return inst || (inst = wrap(Worker()));};"],"sourceRoot":""}