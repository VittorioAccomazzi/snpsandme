{"version":3,"sources":["webpack:///./src/features/appMain/appWorker/bWorker.ts?1c20","features/appMain/appMainSlice.ts","genomeLib/snps.ts","features/appMain/appWorker/fWorker.ts","features/appMain/appTableHeader.tsx","features/appMain/appTableBody.tsx","features/appMain/appTable.tsx","features/appMain/appMain.tsx","features/appToolbar/appProgress.tsx","features/appToolbar/appInfo.tsx","features/appToolbar/appSelector.tsx","features/appToolbar/appToolbar.tsx","features/appVersion/appVersion.tsx","features/appHelp/appHelp.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/appMain/appWorker/bWorker.ts"],"names":["module","exports","Worker","populationTypeSlice","createSlice","name","initialState","population","reducers","setPopulation","state","action","payload","actions","selecPopulation","filenameSlice","filename","setFilename","selecFilename","filenameReducer","reducer","loadingSlice","loading","setLoading","selectLoading","loadingReducer","pagingSlice","page","rowPerPage","setPage","setRowPerPage","selectPaging","paging","pagingReducer","snpsSlice","list","setSnps","selectSnps","snps","snpsReducer","midColor","lowColor","higColor","noColor","defaultSortField","SNPs","text","chrs","this","split","forEach","line","startsWith","items","map","v","trim","length","chr","toUpperCase","undefined","findIndex","match","Number","isNaN","push","id","bases","filter","file","fs","Promise","res","rej","err","data","obj","toString","Error","BackWorkerFactory","comlinkWorker","sortFunctions","ID","a","b","v1","parseInt","snp","substr","v2","Chromosome","sortByTextField","Base","Frequency","perc","Publications","pub","ForegroundWorker","update","worker","sortId","sortDir","type","default","Snps","Evaluate","snpList","doSort","sendUpdate","dir","d","sort","clone","e","useStyles","makeStyles","theme","table","width","container","header","background","fontWeight","TableHeaders","align","AppTableHeader","classes","useState","orderBy","setOrderBy","direction","setDirection","TableHead","TableRow","TableCell","className","TableSortLabel","active","onClick","novalue","high","mid","low","AppTableBody","useSelector","classSelector","el","val","TableBody","i","component","scope","target","href","rel","toFixed","pagination","containerStyle","maxHeight","AppTable","useRef","dispatch","useDispatch","ga","useGA4React","useEffect","current","onSort","useCallback","event","handleChangePage","newPage","handleChangeRowsPerPage","value","TableContainer","Paper","style","Table","size","stickyHeader","aria-label","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","onChangeRowsPerPage","root","height","padding","drop","borderWidth","borderStyle","borderColor","palette","primary","light","display","justifyContent","alignItems","flexDirection","dark","fontSize","color","textAlign","noDisplay","AppMain","setText","error","setError","pageview","onDrop","files","path","toLowerCase","endsWith","indexOf","readFile","sanityCheck","useDropzone","getRootProps","getInputProps","isDragActive","Typography","reader","FileReader","onloadend","result","readAsText","createStyles","iconDisplay","marginRight","spacing","marginLeft","iconHidden","AppProgress","showProgres","showIcon","Box","position","top","left","bottom","right","margin","boxHidden","boxDisplay","AppInfo","hPerc","mPerc","lPerc","uPerc","show","total","values","ret","sum","reduce","s","per","Math","floor","toPersentages","colors","numLow","variant","noWrap","index","combobox","textColor","icon","fill","AppSelector","selectPopulation","options","types","typeName","TextField","select","onChange","InputProps","notchedOutline","SelectProps","option","MenuItem","flexGrow","toolbar","toolList","AppToolbar","AppBar","Toolbar","version","main","ribbon","AppVersion","label","baseURL","forkme","src","alt","gitVersion","long","window","location","localStorageKey","localStorageValue","MapHelp","isRead","localStorage","getItem","getReadHelpStatus","open","setOpen","onClose","Dialog","aria-labelledby","aria-describedby","maxWidth","DialogTitle","DialogContent","DialogContentText","isMobile","title","frameBorder","allow","allowFullScreen","DialogActions","Button","setItem","setReadHelpStatus","autoFocus","createMuiTheme","blue","secondary","withStyles","app","CssBaseline","Hidden","smDown","store","configureStore","populationReducer","Boolean","hostname","ga4react","GA4React","initialize","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","inst","wrap","f"],"mappings":"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","file":"static/js/main.f43f463b.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"8f7c0f4ef30028ce7d5f.worker.js\");\n};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store'\nimport {PopulationType} from '../../genomeLib/frequencyEvaluator'\nimport { SnpVal } from './appWorker/bWorker';\n\n/*\n *\n * Population Type Slide\n *  \n*/\n\ninterface PopulationTypeState {\n    population : PopulationType\n  }\n  \n  const initialPoplationTypeState: PopulationTypeState = {\n    population : 'European'\n  };\n\n  export const populationTypeSlice = createSlice({\n    name: 'PopulationType',\n    initialState: initialPoplationTypeState,\n    reducers: {\n        setPopulation : ( state, action : PayloadAction<PopulationType> ) => {\n            state.population = action.payload\n        }\n      }\n    })\n  \n  export const {setPopulation} = populationTypeSlice.actions;\n  export const selecPopulation= (state: RootState) => state.population.population\n  export default populationTypeSlice.reducer;\n\n  /*\n *\n * Filename\n *  \n*/\n\ninterface FilenameTypeState {\n  filename : string\n}\n\nconst initialFilenameState: FilenameTypeState = {\n  filename : ''\n};\n\nexport const filenameSlice = createSlice({\n  name: 'Filename',\n  initialState: initialFilenameState,\n  reducers: {\n      setFilename : ( state, action : PayloadAction<string> ) => {\n          state.filename = action.payload\n      }\n    }\n  })\n\nexport const {setFilename} = filenameSlice.actions;\nexport const selecFilename= (state: RootState) => state.filename.filename\nexport const filenameReducer= filenameSlice.reducer;\n\n/*\n *\n * is Loading\n *  \n */\n\ninterface LoadingState {\n  loading : boolean\n}\n\nconst loadingInitialState: LoadingState = {\n  loading : false\n};\n\nexport const loadingSlice = createSlice({\n  name: 'Loading',\n  initialState: loadingInitialState,\n  reducers: {\n      setLoading : ( state, action : PayloadAction<boolean> ) => {\n          state.loading  = action.payload\n      }\n    }\n  })\n\nexport const { setLoading } = loadingSlice.actions;\nexport const selectLoading= (state: RootState) => state.loading.loading\nexport const loadingReducer= loadingSlice.reducer;\n\n/*\n *\n *  Paging\n *  \n */\n\ninterface PagingState {\n  page : number,\n  rowPerPage : number\n}\n\nconst pagingInitialState: PagingState = {\n  page : 0,\n  rowPerPage : 50\n};\n\nexport const pagingSlice = createSlice({\n  name: 'Paging',\n  initialState: pagingInitialState,\n  reducers: {\n      setPage : ( state, action : PayloadAction<number> ) => {\n          state.page  = action.payload\n      },\n      setRowPerPage : (state, action : PayloadAction<number>) =>{\n          state.rowPerPage = action.payload\n      }\n    }\n  })\n\nexport const { setPage, setRowPerPage } = pagingSlice.actions;\nexport const selectPaging= (state: RootState) => state.paging\nexport const pagingReducer= pagingSlice.reducer;\n\n/*\n *\n * Snps List\n *  \n */\n\n  interface SnpsState {\n    list : SnpVal[]\n  }\n  \n  const snpsInitialState: SnpsState = {\n    list : []\n  };\n\n  export const snpsSlice = createSlice({\n    name: 'Snps',\n    initialState: snpsInitialState,\n    reducers: {\n        setSnps : ( state, action : PayloadAction<SnpVal[]> ) => {\n            state.list  = action.payload\n        }\n      }\n    })\n  \n  export const { setSnps } = snpsSlice.actions;\n  export const selectSnps= (state: RootState) => state.snps\n  export const snpsReducer= snpsSlice.reducer;\n\n/*\n *\n * Thresholds for freqency\n *  \n */\nexport const midThreshold = 0.5\nexport const lowThreshold = 0.25\nexport const midColor = \"#FFFAAA\"\nexport const lowColor = \"#FFAAAA\"\nexport const higColor = \"#A0A0FF\"\nexport const noColor  = \"#FFFFFF\"\nexport const unkColor = \"#AAAAAA\"\n\n/*\n *\n * Default Sorting\n *  \n */\nexport type TableHeaderSortType = 'ID' | 'Chromosome' | 'Base' | 'Frequency' | 'Publications' \nexport type SortDirection = 'asc' | 'desc'\nexport const defaultSortField = 'Frequency'\nexport const defaultSortOrder = 'asc' \n\n\n","import * as fs from 'fs'\n\n\nexport interface snp {  // tslint:disable-line\n    id : string,\n    chr: string, \n    bases : string\n}\n\nexport default class SNPs {  // tslint:disable-line\n\n    private list : snp []\n\n    constructor ( text : string, chrs? : string[] ){\n        this.list = []\n        let lines = text.split('\\n')\n        lines.forEach((line)=>{\n            if( line.startsWith(\"rs\")) {\n                let items = line.split(\"\\t\").map((v)=>v.trim())\n                if( items.length === 4 ){\n                    let chr = items[1].toUpperCase()\n                    if( chrs === undefined || chrs.findIndex(v=>v===chr) >=0  ){\n                        if( items[3].match(/[AGCT]/) && !Number.isNaN(Number(items[2]))){\n                            this.list.push ({\n                                id : items[0],\n                                chr,\n                                bases : items[3].toUpperCase()\n                            })\n                        }\n                    }\n                }\n            }\n        })\n    }\n\n    get snpList() : snp [] {\n        return this.list\n    }\n\n    snpChromosome(chr:string) : snp [] {\n        chr = chr.trim().toUpperCase()\n        return this.list.filter((v)=>v.chr===chr)\n    }\n\n    static async fromFile( file : string ) : Promise<SNPs> {\n        if ( fs.existsSync(file)){\n            return new Promise((res,rej)=>{\n                fs.readFile(file, {}, (err, data)=>{\n                    if( err ) rej(err)\n                    let obj = new SNPs(data.toString())\n                    res(obj)\n                })\n            })\n        } else {\n            throw new Error(`file ${file} noy found!`)\n        }\n    }\n\n\n}","/* eslint-disable import/no-webpack-loader-syntax */\nimport comlinkWorker from 'comlink-loader!./bWorker'\nimport BackgroundWorker, {BackWorkerClassConstructors, SnpVal} from './bWorker'\nimport {defaultSortField, defaultSortOrder, SortDirection, TableHeaderSortType} from '../appMainSlice'\nimport {PopulationType} from '../../../genomeLib/frequencyEvaluator'\nimport Snps ,{snp} from '../../../genomeLib/snps'\n\nconst BackWorkerFactory = new comlinkWorker<BackWorkerClassConstructors>()\n\nexport type Update = (list :SnpVal[] ) => void\n\nconst sortFunctions = {\n    ID : sortByID,\n    Chromosome : sortByChr,\n    Base : sortByBase,\n    Frequency : sortByPerc,\n    Publications : sortByPub\n}\n\nexport default class ForegroundWorker {\n\n    private worker : BackgroundWorker | null = null\n    private update : Update\n    private list : SnpVal [] = []\n    private sortId : TableHeaderSortType = defaultSortField\n    private sortDir: SortDirection = defaultSortOrder\n\n    constructor( update : Update ) {\n        this.update = update\n    }\n\n    async Evaluate( data : string, type : PopulationType  ){\n        this.worker = await new BackWorkerFactory.default(type)\n        let list = new Snps(data,[\"Y\",\"MT\"])\n        this.list= await this.worker.Evaluate(list.snpList)\n        this.worker = null\n        this.doSort()\n        this.sendUpdate()\n    }\n\n    sort( id : TableHeaderSortType, dir : SortDirection ){\n        this.sortId = id\n        this.sortDir= dir\n        this.doSort()\n        this.sendUpdate()\n    }\n\n    private doSort() {\n        let d  = this.sortDir === 'asc' ? 1 : -1\n        this.list = this.list.sort((a,b)=>d*sortFunctions[this.sortId](a,b))\n    }\n\n    private sendUpdate(){\n        let clone : SnpVal [] = this.list.map(e=>({...e})) //  deep clone\n        this.update(clone)\n    }\n}\n\nfunction sortByID( a : SnpVal, b : SnpVal ): number {\n    let v1 = parseInt(a.snp.id.substr(2))\n    let v2 = parseInt(b.snp.id.substr(2))\n    return  v1-v2\n}\n\nfunction sortByChr( a : SnpVal, b : SnpVal ) : number {\n    return sortByTextField(a,b,'chr')\n}\n\nfunction sortByBase(a : SnpVal, b : SnpVal ) : number {\n    return sortByTextField(a,b,'bases')\n}\n\nfunction sortByTextField(a : SnpVal, b : SnpVal, type : keyof snp) : number {\n    let v1 = a.snp[type]\n    let v2 = b.snp[type]\n    return  v1>v2 ? 1 : -1\n}\n\nfunction sortByPerc(a : SnpVal, b : SnpVal ) : number {\n    let v1 = a.perc ?? 2\n    let v2 = b.perc ?? 2\n    return v1-v2\n}\n\nfunction sortByPub(a : SnpVal, b : SnpVal ) : number {\n    return  a.pub-b.pub\n}\n\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableCell, TableHead, TableRow, TableSortLabel } from \"@material-ui/core\";\nimport { TableHeaderSortType, SortDirection, defaultSortOrder, defaultSortField } from \"./appMainSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width:\"100%\"\n      },\n      container: {\n      },\n      header :{\n          background:\"#FAFAFA\",\n          fontWeight: \"bold\"\n      }\n}))\n\n\ntype AlignType = 'left' | 'right'\ntype OnListSort = ( id : TableHeaderSortType, dir : SortDirection ) => void\ninterface TableHeader {\n    id : TableHeaderSortType,\n    align : AlignType\n    text : string\n}\nconst TableHeaders : TableHeader [] = [\n    {\n        id : 'ID',\n        align : 'left',\n        text : \"SNP id\"\n    },\n    {\n        id : 'Chromosome',\n        align : 'right',\n        text : 'Chromosome'\n    },\n    {\n        id : 'Base',\n        align : 'right',\n        text : 'Base'\n    },\n    {\n        id : 'Frequency',\n        align : 'right',\n        text : 'Frequency'\n    },\n    {\n        id : 'Publications',\n        align :'right',\n        text : 'Publications'\n    }\n]\n\ninterface SnpsTableHeadProps {sort : OnListSort }\n\nexport default function AppTableHeader ({sort} : SnpsTableHeadProps) {\n    const classes = useStyles();\n    const [orderBy, setOrderBy] = useState<TableHeaderSortType>(defaultSortField)\n    const [direction, setDirection] = useState<SortDirection>(defaultSortOrder)\n    const onClick = (id : TableHeaderSortType) => {\n        let dir : SortDirection = 'asc'\n        if( orderBy === id ){\n            dir = direction === 'asc' ? 'desc' : 'asc'\n        } \n        setOrderBy(id)\n        setDirection(dir)\n        sort(id, dir)\n    }\n    return(\n        <TableHead>\n        <TableRow>\n            {\n                TableHeaders.map(header=>(\n                    <TableCell align={header.align}  className={classes.header} key={header.id}>\n                        <TableSortLabel\n                            active={orderBy===header.id}\n                            direction={direction}\n                            onClick={()=>onClick(header.id)}\n                            >\n                            {header.text}\n                        </TableSortLabel>\n                    </TableCell>\n                ))\n            }\n        </TableRow>\n      </TableHead>\n    )\n}\n","import React  from \"react\";\nimport { TableBody, TableCell, TableRow } from \"@material-ui/core\";\nimport { midColor, lowColor, midThreshold, lowThreshold, noColor, unkColor, higColor, selectPaging } from \"../appMain/appMainSlice\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SnpVal } from \"./appWorker/bWorker\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n     undefined :{\n        background: unkColor,\n      },\n      novalue : {\n        background: noColor,\n      },\n      high : {\n        background: higColor,\n      },\n      mid : {\n        background: midColor,        \n      },\n      low : {\n        background: lowColor,        \n      }\n}))\n\ninterface SnpsTableBodyProps { list : SnpVal [] }\n\nexport default function AppTableBody( { list } : SnpsTableBodyProps) {\n    const classes = useStyles();\n    const page = useSelector(selectPaging)\n    const classSelector = ( el : SnpVal ) : string => {\n        let val = classes.undefined\n        if( el.perc !== null ){\n            val = classes.high\n            if( el.perc < midThreshold ) val = classes.mid\n            if( el.perc < lowThreshold ) val = classes.low\n\n        } else {\n            val = classes.novalue\n        }\n        return val\n    }\n\n    return (\n        <TableBody>\n        {list.filter((v,i)=> i>= page.page * page.rowPerPage && i<(page.page+1)*page.rowPerPage).map((el) => (\n          <TableRow key={el.snp.id} className={classSelector(el)}>\n            <TableCell component=\"th\" scope=\"row\"><a  target='_blank' href={`https://www.ncbi.nlm.nih.gov/snp/${el.snp.id}`} rel=\"noreferrer\">{el.snp.id}</a></TableCell>\n            <TableCell align=\"right\">{el.snp.chr}</TableCell>\n            <TableCell align=\"right\">{el.snp.bases}</TableCell>\n            <TableCell align=\"right\">{el.perc !== null ? el.perc.toFixed(2) : \"-\"}</TableCell>\n            <TableCell align=\"right\">{el.pub} </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    )\n}","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Table, TableContainer, TablePagination } from \"@material-ui/core\";\nimport ForegroundWorker from './appWorker/fWorker'\nimport { setSnps, selectSnps, selecPopulation, TableHeaderSortType, SortDirection, setLoading, selectPaging, setPage, setRowPerPage } from \"./appMainSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppTableHeader from './appTableHeader'\nimport AppTableBody from './appTableBody'\nimport { useGA4React } from \"ga-4-react\";\nimport { SnpVal } from \"./appWorker/bWorker\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width:\"100%\"\n      },\n      container: {\n      },\n      pagination : {\n          width:\"100%\"\n      }\n}))\n\n// need to use this mode for usign function calc\nconst containerStyle = {maxHeight: 'calc(100% - 3em)'}\n\ninterface AppTableProps { data : string }\n\n\nexport default function AppTable({ data } : AppTableProps) {\n    const classes = useStyles()\n    let worker = useRef<ForegroundWorker|null>(null)\n    const dispatch= useDispatch();\n    const snps = useSelector(selectSnps)\n    const type = useSelector(selecPopulation)\n    const page = useSelector(selectPaging)\n    const ga = useGA4React()\n\n    useEffect(()=>{\n        const update = (list : SnpVal [] ) =>{\n            dispatch(setSnps(list))\n            dispatch(setLoading(false))\n        }\n        if(!worker.current) worker.current = new ForegroundWorker(update)\n        dispatch(setLoading(true))\n        worker.current.Evaluate(data,type)\n    },[data, dispatch,type])\n\n\n    const onSort = useCallback( ( id : TableHeaderSortType, dir : SortDirection) =>{\n        if( worker.current ) worker.current.sort(id, dir )\n        if(ga) ga.event('Data Sort', id, '')\n    },[ga])\n\n    const handleChangePage = useCallback( ( event : unknown, newPage : number)=>{\n        dispatch(setPage(newPage))\n    },[dispatch])\n\n    const handleChangeRowsPerPage = useCallback((event: React.ChangeEvent<HTMLInputElement>)=>{\n        dispatch(setRowPerPage(+event.target.value))\n    },[dispatch])\n\n    return (\n        <>\n            <TableContainer component={Paper} className={classes.container} style={containerStyle}>\n                <Table className={classes.table} size=\"small\" stickyHeader aria-label=\"simple table\">\n                    <AppTableHeader sort={onSort}/>\n                    <AppTableBody list={snps.list}/>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                className={classes.pagination}\n                rowsPerPageOptions={[50, 100, 200, 500]}\n                component=\"div\"\n                count={snps.list.length}\n                rowsPerPage={page.rowPerPage}\n                page={page.page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </>\n    )\n}\n","import React, {useState, useCallback, useEffect} from 'react'\nimport  { useDropzone } from \"react-dropzone\"\nimport { FileWithPath } from \"file-selector\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Typography from '@material-ui/core/Typography';\nimport SnpTable from './appTable'\nimport { useDispatch } from 'react-redux';\nimport { setFilename, setPage } from './appMainSlice';\nimport { useGA4React } from 'ga-4-react';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n            width:'100%',\n            height:'100%',\n            padding:'4px'\n        },\n        drop :{\n            width:'100%',\n            height:'100%',\n            borderWidth:'2px',\n            borderStyle: 'dotted',\n            borderColor: theme.palette.primary.light,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n            \"&:hover\": {\n                borderColor: theme.palette.primary.dark\n              },\n            \"& .AddIcn\" :{\n                fontSize:80,\n                color: theme.palette.primary.light\n            },\n            \"&:hover .AddIcn\" :{\n                fontSize:80,\n                color: theme.palette.primary.dark\n            },\n            \"& .text\" :{\n            textAlign:'center',\n            color:theme.palette.primary.light \n            },\n            \"&:hover .text\" :{\n                textAlign:'center',\n                color:theme.palette.primary.dark \n            }\n        },\n        noDisplay : {\n            display:'none'\n        }\n    }))\n\n    export default function AppMain(){\n        const classes = useStyles();\n        const [text, setText] = useState<string|null>(null)\n        const [error, setError] = useState<string|null>(null)\n        const dispatch = useDispatch()\n        const ga = useGA4React()\n\n        useEffect(()=>{\n            if( ga ) ga.pageview('main')\n        },[]) // eslint-disable-line  -- ga not added on purpose\n\n        const onDrop = useCallback(async (files: FileWithPath[]) =>  {\n            let list = files.filter((file)=>file.path && (file.path.toLowerCase().endsWith('.txt')||file.path.toLowerCase().indexOf('.23andme.')>0))\n            if( list.length > 0 ) {\n                let file = list[0]\n                let data = await readFile(file)\n                if( sanityCheck(data)){\n                    setText(data)\n                    dispatch(setFilename(file.name))\n                    dispatch(setPage(0))\n                    if(ga) ga.event('Valid File Load', 'valid file', '')\n                } else {\n                    setText(null)\n                    setError(`${file.name} is not valid`)\n                    if(ga) ga.event('Invalid File Content', 'invalid file content', '')\n                }\n            } else {\n                setText(null)\n                setError(`unable to load ${files[0].name}`)\n                if(ga) ga.event('Invalid File Type', 'invalid file type', '')\n            }\n        }, [setText, dispatch]) // eslint-disable-line  -- ga not added on purpose\n\n        const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n    \n        return (\n            <div className={classes.root}>\n                    <div {...getRootProps()} className={classes.root}>\n                            <div className={ isDragActive ? classes.drop : classes.noDisplay}>\n                                <ArrowDownwardIcon className=\"AddIcn\"/>\n                                <Typography className=\"text\">Drop the file here.</Typography>\n                            </div> \n                            {\n                                text !== null ?\n                                <>\n                                    <SnpTable data={text}/>\n                                </> :\n                                <div className={isDragActive ? classes.noDisplay : classes.drop}>\n                                    <input {...getInputProps()} />\n                                    <AddIcon className=\"AddIcn\"/>\n                                    {\n                                        error !== null ?\n                                        <>\n                                            <Typography className=\"text\">🖐 {error}</Typography>\n                                        </> :\n                                        <></>\n                                    }   \n                                    <>\n                                        <Typography className=\"text\">Drag and Drop here your 23andme txt file.</Typography>\n                                        <Typography className=\"text\">or click here to select the file.</Typography>\n                                    </>\n                                </div> \n                            }\n                    </div>\n            </div>\n        )\n    }\n\n    async function readFile ( file : FileWithPath ) : Promise<string> {\n        return new Promise((res)=>{\n            let reader = new FileReader()\n            reader.onloadend = ()=> res(reader.result as string)\n            reader.readAsText(file)\n        })\n    }\n\n    // Sanity check that the file is a valid\n    // 23andme SNP file.\n    const key1 = \"This data file generated by 23andMe\"\n    const key2 = \"# rsid\tchromosome\tposition\tgenotype\"\n    function sanityCheck(data:string) : boolean {\n        return data.indexOf(key1) > 0 && data.indexOf(key2) > 0\n    }\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectLoading, selectSnps } from '../appMain/appMainSlice'\nimport { Box, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    iconDisplay:{\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(4),\n        color : 'white'\n    },\n    iconHidden:{\n        display: 'none'\n    }\n  }),\n);\n\n\nexport default function AppProgress() {\n    const classes = useStyles();\n    const snps    = useSelector(selectSnps)\n    const loading = useSelector(selectLoading)\n    const showProgres = loading\n    const showIcon = !loading && snps.list.length > 0\n    return(\n        <>\n            <Box position=\"relative\" display=\"inline-flex\">\n                <Box\n                    top={0}\n                    left={0}\n                    bottom={0}\n                    right={0}\n                    position=\"absolute\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                >\n                <HourglassFullIcon className={ showProgres ? classes.iconDisplay : classes.iconHidden} fontSize='large' />\n                <CheckCircleRoundedIcon className={ showIcon ? classes.iconDisplay : classes.iconHidden} fontSize='large' />\n                </Box>\n            </Box>\n        </>\n    )\n}\n\n\n\n\n\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector } from 'react-redux';\nimport { Box } from '@material-ui/core';\nimport { midColor, lowColor, midThreshold, lowThreshold, noColor, higColor, selectSnps, selectLoading } from \"../appMain/appMainSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      marginRight: theme.spacing(2),\n    },\n    boxHidden :{\n      display : 'none'\n    },\n    boxDisplay :{\n      display : 'inline-flex'\n    }\n  }),\n);\n\nexport default function AppInfo() {\n  const classes = useStyles();\n  const snps    = useSelector(selectSnps)\n  const loading = useSelector(selectLoading)\n  let hPerc=0\n  let mPerc=0\n  let lPerc=0\n  let uPerc=0\n\n  const show = snps.list.length > 0 \n  const total = loading ? \"-----\" : snps.list.length.toString() \n\n  snps.list.forEach( snp => \n    snp.perc !== null ? (snp.perc < lowThreshold ? lPerc++ : ( snp.perc < midThreshold ? mPerc++ : hPerc++)) : uPerc++  )\n\n  const values = [lPerc, mPerc, hPerc, uPerc]   \n  const perc = toPersentages( values )\n  const colors = [lowColor, midColor, higColor, noColor]\n  const numLow = loading ? \"--\" : lPerc.toString()\n\n  return (\n\n    <Box position=\"relative\" className={show ? classes.boxDisplay : classes.boxHidden}>\n      <Typography align='center' variant=\"caption\" color='secondary' className={classes.margin} noWrap> {`${total} Snps, ${numLow} low frequency`}</Typography>\n      <Box\n          top={20}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          className={classes.margin}\n      >\n        {\n          perc.map((el,index)=>(\n            <div style={{background: colors[index], position:'relative', width: el, height:'5px'}} key={index}/>\n          ))\n        }\n      </Box>\n    </Box>\n\n  );\n}\n\nfunction toPersentages(values : number [] ) : string [] {\n  let ret : string [] = []\n  let sum = values.reduce((s,v)=>s+v,0)\n  if( sum > 0 ){\n    let per = values.map(v=>Math.floor(100*v/sum))\n    let err = 100 - per.reduce((s,v)=>s+v,0) // error in roundinng. Must be positive\n    per[per.length-1] += err // to make sure that rounds up to 100\n    ret = per.map(v=>`${v}%`)\n  }\n  return ret\n}","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { selecPopulation as selectPopulation, setPopulation } from '../appMain/appMainSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MenuItem, TextField } from '@material-ui/core';\nimport { PopulationType } from '../../genomeLib/frequencyEvaluator';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    combobox: {\n      marginRight: theme.spacing(2),\n      background: 'transparent'\n    },\n    textColor :{\n        color : 'white',\n        borderWidth: '1px',\n        borderColor: 'white !important'\n    },\n    icon: {\n        fill: 'white',\n    },\n  }),\n);\n\nexport default function AppSelector() {\n    const classes = useStyles();\n    const type  = useSelector(selectPopulation)\n    const dispatch = useDispatch()\n\n    const options : string [] = ['European', \"African\", \"East Asian\", \"South Asian\"]\n    const types : PopulationType[]   = ['European', 'African', 'SAsian', 'EAsian']\n    const typeName= options[types.indexOf(type)]\n    return (\n\n        <TextField className={classes.combobox}  variant='outlined' size='small'\n            select\n            value={typeName}\n            onChange={(e)=>{\n                let val = types[options.indexOf(e.target.value ?? 'European')]\n                dispatch(setPopulation(val))\n            }}\n            InputProps={{\n                classes: {\n                    root: classes.textColor,\n                    notchedOutline: classes.textColor\n                  }\n            }}\n            SelectProps={{\n                classes: { icon: classes.icon },\n              }}\n        >\n            {options.map((option) => (\n                <MenuItem key={option} value={option}  >\n                    {option}\n                </MenuItem>\n            ))}\n      </TextField>\n    )\n}","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AppProgress from './appProgress'\nimport AppInfo from './appInfo'\nimport { useSelector } from 'react-redux';\nimport { selecFilename } from '../appMain/appMainSlice';\nimport AppSelector from './appSelector';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    toolbar : {\n      display:'flex',\n      justifyContent:'space-between'\n    },\n    toolList : {\n      display:'flex',\n      alignItems:'center'\n    }\n  }),\n);\n\nexport default function AppToolbar() {\n  const classes = useStyles();\n  const filename = useSelector(selecFilename)\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\" className={classes.toolbar}>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              SNPs and Me { filename.length > 0  ? `[${filename}]` : ''}\n            </Typography>\n          <div className={classes.toolList}>\n            <AppSelector/>\n            <AppInfo/>\n            <AppProgress/>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from \"react\";\nimport gitVersion from '../../tools/gitInfo.json'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    version: {\n        position: 'absolute', \n        left: '14px', \n        bottom: '0px',\n        fontSize : '12px',\n        color : theme.palette.primary.main\n    },\n    ribbon :{\n        position: 'absolute', \n        right: '0px', \n        top: '0px'\n    }\n}))\n\n\ntype gitInfoProps = { label : string, baseURL? : string, forkme : Boolean }\n\nconst  AppVersion = ({label, baseURL, forkme}:gitInfoProps) => {\n        const classes = useStyles();\n        const handleClick = () => {\n            if( baseURL && gitVersion.long !== \"\" )  window.location.href = baseURL+'/tree/'+gitVersion.long;\n        }\n        return ( \n            <>\n            {forkme && baseURL && (\n                <div className={classes.ribbon}> \n                    <a href={baseURL}>\n                        <img width=\"100\" height=\"100\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_red_aa0000.png?resize=100%2C100\" alt=\"Fork me on GitHub\"/>\n                    </a>\n                </div>\n            ) }\n            <div className={classes.version} onClick={handleClick}>\n                <p>{label + gitVersion.version}</p>\n            </div>\n            </>\n        )\n}\n\nexport default AppVersion;","import React, {useState}  from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {isMobile} from 'react-device-detect';\n\nconst localStorageKey=\"SnpsAndMeHelpReadStatus\";\nconst localStorageValue = \"Read\";\n\nconst MapHelp = ()=>{\n    let [open,setOpen] = useState<boolean>(!getReadHelpStatus());\n\n    const onClose = () =>{\n        setOpen(false);\n    }\n\n    const onDismiss = ()=>{\n        onClose();\n        setReadHelpStatus()\n    }\n\n    return (\n    <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        maxWidth='lg'\n    >\n        <DialogTitle id=\"alert-dialog-title\">{\"SNPs and Me\"}</DialogTitle>\n         <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n            Drag and drop your 23andme file and the browser will color code the part of the genome (called <a href='https://en.wikipedia.org/wiki/Single-nucleotide_polymorphism'>SNP</a>) based on their frequency.\n            You will be able to find the part which are <i>rare among the population</i> and so the ones which make you <i>unique</i> !<br/><br/>\n            Click on the SNP ID to find out information about it from the <a href=\"https://www.ncbi.nlm.nih.gov/\">National Center for Biochnology Information</a>.\n            </DialogContentText>\n            {\n                !isMobile && (\n                    <DialogContentText id=\"alert-dialog-description\" align='center' >\n                        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/lUS8Q2-EbyY\" title=\"Snp and me\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </DialogContentText>\n                )\n            }\n            <DialogContentText id=\"alert-dialog-description\">\n                <b>🖐 Privacy Statement:</b> this application <u><i>does not</i></u> store nor transmit your genomic information. All the analysis is done locally in your browser.\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n            close\n        </Button>\n        <Button onClick={onDismiss} color=\"primary\" autoFocus>\n            dismiss forever\n        </Button>\n     </DialogActions> \n      </Dialog>);\n}\nexport default MapHelp;\n\nfunction getReadHelpStatus(){\n    let isRead = false\n    try {\n        let value = localStorage.getItem(localStorageKey);\n        if( value ){\n            isRead = (value===localStorageValue);\n        }\n    } catch {\n        // ignore\n    }\n    return isRead\n}\n\nfunction setReadHelpStatus(){\n    try {\n        localStorage.setItem(localStorageKey,localStorageValue);\n    } catch {\n        // ignore\n    }\n\n}\n","import React from \"react\";\nimport {\n  createMuiTheme,\n  withStyles,\n  createStyles,\n  Theme,\n  WithStyles,\n  StyleRules\n} from \"@material-ui/core/styles\";\nimport {\n  MuiThemeProvider,\n  CssBaseline,\n  Hidden,\n} from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport AppMain from  './features/appMain/appMain';\nimport AppToolbar from './features/appToolbar/appToolbar'\nimport AppVersion from './features/appVersion/appVersion'\nimport AppHelp from './features/appHelp/appHelp'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: {\n      main: \"#fff\"\n    },\n    background: {\n      default: \"#fff\"\n    }\n  }\n});\n\nconst styles: (theme: Theme) => StyleRules<string> = theme =>\n  createStyles({\n    app: {\n      textAlign: \"center\" \n    },\n    main :{\n      position:'absolute',\n      top:'55px',\n      right: '0px',\n      left:'0px',\n      bottom: '0px',\n      background : 'white',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n  });\n\ntype AppProps = {} & WithStyles<typeof styles>;\n\nconst App = ({ classes }: AppProps) => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <div className={classes.app}>\n      <AppToolbar/>\n      <div className={classes.main}>\n        <AppMain />\n      </div>\n      <Hidden smDown >\n        <AppVersion label=\"version : \" forkme={false} baseURL=\"https://github.com/VittorioAccomazzi/snpsandme\" />\n      </Hidden>\n      <AppHelp/>\n    </div>\n  </MuiThemeProvider>\n);\n\nexport default withStyles(styles)(App);\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport populationReducer, {snpsReducer, filenameReducer, loadingReducer, pagingReducer} from '../features/appMain/appMainSlice';\n\nexport const store = configureStore({\n  reducer: {\n    population: populationReducer,\n    snps: snpsReducer,\n    filename: filenameReducer,\n    loading : loadingReducer,\n    paging : pagingReducer\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport GA4React from 'ga-4-react'\n\nconst timeout = 30000 // millisecond.\nconst ga4react = new GA4React(\"G-QK0MGYD60T\", undefined, undefined, timeout);\n\nconst main = async ()=>{\n  await ga4react.initialize();\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n}\n\n// Start the appliction\nmain()\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var wrap = require('comlink').wrap,Worker = require(\"!worker-loader?{}!/Users/vittorio/Documents/Personal/Project/snpsandme/node_modules/comlink-loader/dist/comlink-worker-loader.js!/Users/vittorio/Documents/Personal/Project/snpsandme/node_modules/babel-loader/lib/index.js??ref--5-oneOf-2!/Users/vittorio/Documents/Personal/Project/snpsandme/src/features/appMain/appWorker/bWorker.ts\"),inst;module.exports = function f() {if (this instanceof f) return wrap(Worker());return inst || (inst = wrap(Worker()));};"],"sourceRoot":""}