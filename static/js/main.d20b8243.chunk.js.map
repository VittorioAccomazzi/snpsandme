{"version":3,"sources":["webpack:///./src/features/appMain/appWorker/bWorker.ts?1c20","features/appMain/appWorker/fWorker.ts","genomeLib/snps.ts","features/appMain/snpList.ts","features/appMain/appMainSlice.ts","features/appMain/appTableHeader.tsx","features/appMain/appTableBody.tsx","features/appMain/appTable.tsx","features/appMain/appMain.tsx","features/appToolbar/appProgress.tsx","features/appToolbar/appInfo.tsx","features/appToolbar/appSelector.tsx","features/appToolbar/appToolbar.tsx","features/appVersion/appVersion.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/appMain/appWorker/bWorker.ts"],"names":["module","exports","Worker","BackWorkerFactory","comlinkWorker","ForegroundWorker","progress","worker","data","timerID","this","snps","type","a","Error","default","start","startWorker","window","clearTimeout","doWork","Next","res","length","setTimeout","console","log","SNPs","text","chrs","list","split","forEach","line","startsWith","items","map","v","trim","chr","toUpperCase","undefined","findIndex","match","Number","isNaN","push","id","bases","filter","file","fs","Promise","rej","err","obj","toString","sortFunctions","ID","b","dir","v1","parseInt","snp","substr","v2","Chromosome","sortByTextField","Base","Frequency","sortByNullNumber","Publications","SnpList","update","sortId","sortDir","stop","Snps","snpList","toSnpEl","doSort","vals","merge","sendUpdate","sort","val","clone","e","done","el","find","perc","pub","s","populationTypeSlice","createSlice","name","initialState","population","reducers","setPopulation","state","action","payload","actions","selecPopulation","filenameSlice","filename","setFilename","selecFilename","filenameReducer","reducer","snpsSlice","setSnps","selectSnps","snpsReducer","midColor","lowColor","higColor","noColor","unkColor","useStyles","makeStyles","theme","table","width","container","header","background","fontWeight","TableHeaders","align","AppTableHeader","classes","useState","orderBy","setOrderBy","direction","setDirection","TableHead","TableRow","TableCell","className","TableSortLabel","active","onClick","novalue","high","mid","low","AppTableBody","classSelector","TableBody","component","scope","target","href","rel","toFixed","containerStyle","maxHeight","AppTable","useRef","dispatch","useDispatch","useSelector","useEffect","current","TableContainer","Paper","style","Table","size","stickyHeader","aria-label","root","height","padding","drop","borderWidth","borderStyle","borderColor","palette","primary","light","display","justifyContent","alignItems","flexDirection","dark","fontSize","color","textAlign","noDisplay","textExtensions","AppMain","setText","error","setError","onDrop","useCallback","files","some","ext","path","toLowerCase","endsWith","readFile","sanityCheck","useDropzone","getRootProps","getInputProps","isDragActive","Typography","reader","FileReader","onloadend","result","readAsText","indexOf","createStyles","cirProgress","marginRight","spacing","txtProgress","cirHidden","textHidden","iconDisplay","iconHidden","AppProgress","todo","total","showProgres","percentage","progVariant","progLabel","Math","round","Box","position","CircularProgress","variant","value","top","left","bottom","right","margin","boxHidden","boxDisplay","AppInfo","hPerc","mPerc","lPerc","uPerc","nPerc","values","reduce","t","ret","sum","per","floor","toPersentages","colors","index","combobox","textColor","icon","fill","AppSelector","selectPopulation","options","types","typeName","TextField","select","onChange","InputProps","notchedOutline","SelectProps","option","MenuItem","flexGrow","toolbar","toolList","AppToolbar","AppBar","Toolbar","noWrap","version","main","ribbon","AppVersion","label","baseURL","forkme","src","alt","gitVersion","long","location","createMuiTheme","blue","secondary","withStyles","app","CssBaseline","store","configureStore","populationReducer","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","inst","wrap","f"],"mappings":"yFAAAA,EAAOC,QAAU,WACf,OAAO,IAAIC,OAAO,IAA0B,oC,sRCMxCC,EAAoB,I,OAAIC,GAYTC,E,WAOjB,WAAaC,GAAsB,yBAL3BC,OAAmC,KAKT,KAJ1BC,KAA2B,KAID,KAH1BC,QAAyB,KAGC,KAF1BH,cAE0B,EAC9BI,KAAKJ,SAAWA,E,gFAGpB,WAAaK,EAAcC,GAA3B,SAAAC,EAAA,0DACQH,KAAKH,OADb,sBAC4BO,MAAM,+CADlC,cAEIJ,KAAKF,KAAO,CAAEG,OAAMC,QAFxB,SAGwB,IAAIT,EAAkBY,QAAQL,KAAKF,KAAKI,MAHhE,OAGIF,KAAKH,OAHT,OAIIG,KAAKH,OAAOS,MAAMN,KAAKF,KAAKG,MAC5BD,KAAKO,cALT,gD,2EAQA,WACQP,KAAKD,SAAUS,OAAOC,aAAcT,KAAKD,SAC7CC,KAAKD,QAAU,KACfC,KAAKF,KAAO,O,gEAGhB,2FAEIE,KAAKH,OAAQS,MAAMN,KAAKF,KAAMG,OAExBS,EAJV,uCAImB,4BAAAP,EAAA,0DACP,EAAKL,OAAQ,EAAKD,OADX,uBAEP,EAAKE,QAAU,KAFR,SAGS,EAAKF,OAAOc,OAHrB,OAGHC,EAHG,OAIH,EAAKd,MAAQ,EAAKD,SACde,EAAIC,OAAS,GACb,EAAKjB,SAASgB,GACd,EAAKb,QAAUS,OAAOM,WAAWJ,EAxC1C,OA0CS,EAAKb,OAAS,KACdkB,QAAQC,IAAI,uBAVb,2CAJnB,wG,qECnCiBC,E,WAIjB,WAAcC,EAAeC,GAAmB,IAAD,gCAFvCC,UAEuC,EAC3CpB,KAAKoB,KAAO,GACAF,EAAKG,MAAM,MACjBC,SAAQ,SAACC,GACX,GAAIA,EAAKC,WAAW,MAAO,CACvB,IAAIC,EAAQF,EAAKF,MAAM,MAAMK,KAAI,SAACC,GAAD,OAAKA,EAAEC,UACxC,GAAqB,IAAjBH,EAAMZ,OAAc,CACpB,IAAIgB,EAAMJ,EAAM,GAAGK,oBACNC,IAATZ,GAAsBA,EAAKa,WAAU,SAAAL,GAAC,OAAEA,IAAIE,MAAO,IAC/CJ,EAAM,GAAGQ,MAAM,YAAcC,OAAOC,MAAMD,OAAOT,EAAM,MACvD,EAAKL,KAAKgB,KAAM,CACZC,GAAKZ,EAAM,GACXI,MACAS,MAAQb,EAAM,GAAGK,qB,yCAS7C,WACI,OAAO9B,KAAKoB,O,2BAGhB,SAAcS,GAEV,OADAA,EAAMA,EAAID,OAAOE,cACV9B,KAAKoB,KAAKmB,QAAO,SAACZ,GAAD,OAAKA,EAAEE,MAAMA,Q,8DAGzC,WAAuBW,GAAvB,qEACSC,aAAcD,GADvB,yCAEe,IAAIE,SAAQ,SAAC9B,EAAI+B,GACpBF,WAAYD,EAAM,IAAI,SAACI,EAAK9C,GACpB8C,GAAMD,EAAIC,GACd,IAAIC,EAAM,IAAI5B,EAAKnB,EAAKgD,YACxBlC,EAAIiC,UANpB,aAUc,IAAIzC,MAAJ,eAAkBoC,EAAlB,gBAVd,2C,8DCnCEO,EAAgB,CAClBC,GA0EJ,SAAmB7C,EAAY8C,EAAYC,GACvC,IAAIC,EAAKC,SAASjD,EAAEkD,IAAIhB,GAAGiB,OAAO,IAC9BC,EAAKH,SAASH,EAAEI,IAAIhB,GAAGiB,OAAO,IAClC,MAAgB,QAARJ,EAAgBC,EAAGI,EAAKA,EAAGJ,GA5EnCK,WA+EJ,SAAoBrD,EAAY8C,EAAYC,GACxC,OAAOO,EAAgBtD,EAAE8C,EAAEC,EAAI,QA/E/BQ,KAkFJ,SAAoBvD,EAAY8C,EAAYC,GACxC,OAAOO,EAAgBtD,EAAE8C,EAAEC,EAAI,UAlF/BS,UA4FJ,SAAoBxD,EAAY8C,EAAYC,GACxC,OAAOU,EAAiBzD,EAAE8C,EAAEC,EAAI,SA5FhCW,aA+FJ,SAAmB1D,EAAY8C,EAAYC,GACvC,OAAOU,EAAiBzD,EAAE8C,EAAEC,EAAI,SA7FfY,E,WAQjB,WAAaC,GAAmB,yBANxBlE,OAAmC,KAMZ,KALvBkE,YAKuB,OAJvB3C,KAAkB,GAIK,KAHvB4C,OAA+B,KAGR,KAFvBC,QAAyB,MAG7BjE,KAAK+D,OAASA,E,yCAGlB,SAAOjE,EAAeI,GAAyB,IAAD,OACtCF,KAAKH,QAASG,KAAKH,OAAOqE,OAC9B,IAKI9C,EAAO,IAAI+C,EAAKrE,EAAK,CAAC,IAAI,OAC9BE,KAAKoB,KAAMA,EAAKgD,QAAQ1C,KAAI,SAAAC,GAAC,OAAE,EAAK0C,QAAQ1C,MAC5C3B,KAAKsE,SACLtE,KAAKH,OAAS,IAAIF,GARD,SAAE4E,GACf,EAAKC,MAAMD,GACS,cAAhB,EAAKP,QAA0C,iBAAhB,EAAKA,QAA4B,EAAKM,SACzE,EAAKG,gBAMTzE,KAAKH,OAAOS,MAAMc,EAAKgD,QAASlE,K,kBAGpC,SAAMmC,EAA0Ba,GAC5BlD,KAAKgE,OAAS3B,EACdrC,KAAKiE,QAASf,EACdlD,KAAKsE,SACLtE,KAAKyE,e,oBAGT,WAAkB,IAAD,OACbzE,KAAKoB,KAAOpB,KAAKoB,KAAKsD,MAAK,SAACvE,EAAE8C,GAAH,OAAOF,EAAc,EAAKiB,QAAQ7D,EAAEwE,IAAI1B,EAAE0B,IAAI,EAAKV,c,wBAGlF,WACI,IAAIW,EAAQ5E,KAAKoB,KAAKM,KAAI,SAAAmD,GAAC,MAAG,CAACC,KAAKD,EAAEC,KAAMH,IAAI,eAAKE,EAAEF,SACvD3E,KAAK+D,OAAOa,K,mBAGhB,SAAcL,GACVvE,KAAKoB,KAAKE,SAAS,SAAAyD,GACf,IAAKA,EAAGD,KAAM,CACV,IAAIH,EAAMJ,EAAKS,MAAK,SAAArD,GAAC,OAAEoD,EAAGJ,IAAItB,IAAIhB,KAAOV,EAAE0B,IAAIhB,MAC3CsC,IACAI,EAAGD,MAAO,EACVC,EAAGJ,IAAIM,KAAON,EAAIM,KAClBF,EAAGJ,IAAIO,IAAMP,EAAIO,W,qBAMjC,SAAiBC,GACb,MAAO,CACHR,IAAM,CACFtB,IAAK8B,EACLF,KAAO,KACPC,IAAM,GAEVJ,MAAO,O,KAmBnB,SAASrB,EAAgBtD,EAAY8C,EAAYC,EAAqBhD,GAIlE,OADiB,QAARgD,EAAgB,GAAK,IAFrB/C,EAAEkD,IAAInD,GACN+C,EAAEI,IAAInD,GAEK,GAAK,GAW7B,SAAS0D,EAAiBzD,EAAY8C,EAAYC,EAAqBhD,GAA+B,IAAD,IAIjG,OADiB,QAARgD,EAAgB,GAAK,KAFxB,UAAG/C,EAAED,UAAL,QAAc,IACd,UAAG+C,EAAE/C,UAAL,QAAc,GAEA,GAAK,G,YClGdkF,EAAsBC,YAAY,CAC7CC,KAAM,iBACNC,aANqD,CACrDC,WAAa,YAMbC,SAAU,CACNC,cAAgB,SAAEC,EAAOC,GACrBD,EAAMH,WAAaI,EAAOC,YAKtBH,EAAiBN,EAAoBU,QAArCJ,cACDK,EAAiB,SAACJ,GAAD,OAAsBA,EAAMH,WAAWA,YACtDJ,IAAf,QAgBWY,EAAgBX,YAAY,CACvCC,KAAM,WACNC,aAN8C,CAC9CU,SAAW,IAMXR,SAAU,CACNS,YAAc,SAAEP,EAAOC,GACnBD,EAAMM,SAAWL,EAAOC,YAKpBK,EAAeF,EAAcF,QAA7BI,YACDC,EAAe,SAACR,GAAD,OAAsBA,EAAMM,SAASA,UACpDG,EAAiBJ,EAAcK,QAoB7BC,EAAYjB,YAAY,CACnCC,KAAM,OACNC,aAN8B,CAC9BnE,KAAO,IAMPqE,SAAU,CACNc,QAAU,SAAEZ,EAAOC,GACfD,EAAMvE,KAAQwE,EAAOC,YAKhBU,EAAYD,EAAUR,QAAtBS,QACFC,EAAY,SAACb,GAAD,OAAsBA,EAAM1F,MACxCwG,EAAaH,EAAUD,QASzBK,EAAW,UACXC,EAAW,UACXC,GAAW,UACXC,GAAW,UACXC,GAAW,U,yDCpGlBC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,MAAM,QAERC,UAAW,GAEXC,OAAQ,CACJC,WAAW,UACXC,WAAY,YAahBC,GAAgC,CAClC,CACInF,GAAK,KACLoF,MAAQ,OACRvG,KAAO,UAEX,CACImB,GAAK,aACLoF,MAAQ,QACRvG,KAAO,cAEX,CACImB,GAAK,OACLoF,MAAQ,QACRvG,KAAO,QAEX,CACImB,GAAK,YACLoF,MAAQ,QACRvG,KAAO,aAEX,CACImB,GAAK,eACLoF,MAAO,QACPvG,KAAO,iBAMA,SAASwG,GAAT,GAAuD,IAA7BhD,EAA4B,EAA5BA,KAC/BiD,EAAUZ,KADiD,EAEnCa,mBAA8B,MAFK,mBAE1DC,EAF0D,KAEjDC,EAFiD,OAG/BF,mBAAwB,OAHO,mBAG1DG,EAH0D,KAG/CC,EAH+C,KAajE,OACI,eAACC,GAAA,EAAD,UACA,eAACC,GAAA,EAAD,UAEQV,GAAa9F,KAAI,SAAA2F,GAAM,OACnB,eAACc,GAAA,EAAD,CAAWV,MAAOJ,EAAOI,MAAQW,UAAWT,EAAQN,OAApD,SACI,eAACgB,GAAA,EAAD,CACIC,OAAQT,IAAUR,EAAOhF,GACzB0F,UAAWA,EACXQ,QAAS,kBAlBjB,SAAClG,GACb,IAAIa,EAAsB,MACtB2E,IAAYxF,IACZa,EAAoB,QAAd6E,EAAsB,OAAS,OAEzCD,EAAWzF,GACX2F,EAAa9E,GACbwB,EAAKrC,EAAIa,GAWwBqF,CAAQlB,EAAOhF,KAHhC,SAKKgF,EAAOnG,QANiDmG,EAAOhF,W,cCpEtF0E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACpClF,UAAW,CACRuF,WAAYR,IAEd0B,QAAU,CACRlB,WAAYT,IAEd4B,KAAO,CACLnB,WAAYV,IAEd8B,IAAM,CACJpB,WAAYZ,GAEdiC,IAAM,CACJrB,WAAYX,OAML,SAASiC,GAAT,GAAuD,IAA9BxH,EAA6B,EAA7BA,KAC9BuG,EAAUZ,KACV8B,EAAgB,SAAE9D,GACpB,IAAIJ,EAAMgD,EAAQ5F,UAWlB,OAVIgD,EAAGD,OACCC,EAAGJ,IAAIM,MACPN,EAAMgD,EAAQc,KACV1D,EAAGJ,IAAIM,KFkEC,KElEsBN,EAAMgD,EAAQe,KAC5C3D,EAAGJ,IAAIM,KFkEC,MElEqBN,EAAMgD,EAAQgB,MAG/ChE,EAAMgD,EAAQa,SAGf7D,GAEX,OACI,eAACmE,GAAA,EAAD,UACC1H,EAAKM,KAAI,SAACqD,GAAD,OACR,gBAACmD,GAAA,EAAD,CAA8BE,UAAWS,EAAc9D,GAAvD,UACE,eAACoD,GAAA,EAAD,CAAWY,UAAU,KAAKC,MAAM,MAAhC,SAAsC,oBAAIC,OAAO,SAASC,KAAI,2CAAsCnE,EAAGJ,IAAItB,IAAIhB,IAAM8G,IAAI,aAAnF,SAAiGpE,EAAGJ,IAAItB,IAAIhB,OAClJ,eAAC8F,GAAA,EAAD,CAAWV,MAAM,QAAjB,SAA0B1C,EAAGJ,IAAItB,IAAIxB,MACrC,eAACsG,GAAA,EAAD,CAAWV,MAAM,QAAjB,SAA0B1C,EAAGJ,IAAItB,IAAIf,QACrC,eAAC6F,GAAA,EAAD,CAAWV,MAAM,QAAjB,SAA0B1C,EAAGJ,IAAIM,KAAOF,EAAGJ,IAAIM,KAAKmE,QAAQ,GAAK,MACjE,gBAACjB,GAAA,EAAD,CAAWV,MAAM,QAAjB,UAA0B1C,EAAGJ,IAAIO,IAAM,EAAIH,EAAGJ,IAAIO,IAAOH,EAAGJ,IAAIM,KAAO,IAAM,IAA7E,SALaF,EAAGJ,IAAItB,IAAIhB,SCnCpC,IAAM0E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,MAAM,QAERC,UAAW,OAKXiC,GAAiB,CAACC,UAAW,oBAKpB,SAASC,GAAT,GAA8C,IAA1BzJ,EAAyB,EAAzBA,KACzB6H,EAAUZ,KACZlH,EAAS2J,iBAAqB,MAC5BC,EAAUC,eACVzJ,EAAO0J,aAAYnD,GACnBtG,EAAOyJ,aAAY5D,GAEzB6D,qBAAU,WAIF/J,EAAOgK,UAAShK,EAAOgK,QAAU,IAAI/F,GAH1B,SAAC1C,GACZqI,EAASlD,EAAQnF,QAGrBvB,EAAOgK,QAAQvJ,MAAMR,EAAKI,KAC5B,CAACJ,EAAM2J,EAASvJ,IAOlB,OACQ,eAAC4J,EAAA,EAAD,CAAgBf,UAAWgB,IAAO3B,UAAWT,EAAQP,UAAW4C,MAAOX,GAAvE,SACI,gBAACY,EAAA,EAAD,CAAO7B,UAAWT,EAAQT,MAAOgD,KAAK,QAAQC,cAAY,EAACC,aAAW,eAAtE,UACI,eAAC1C,GAAD,CAAgBhD,KAPjB,SAAErC,EAA0Ba,GACnCrD,EAAOgK,SAAUhK,EAAOgK,QAAQnF,KAAKrC,EAAIa,MAOjC,eAAC0F,GAAD,CAAcxH,KAAMnB,EAAKmB,YCpC7C,IAAM2F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCoD,KAAM,CACElD,MAAM,OACNmD,OAAO,OACPC,QAAQ,OAEZC,KAAM,CACFrD,MAAM,OACNmD,OAAO,OACPG,YAAY,MACZC,YAAa,SACbC,YAAa1D,EAAM2D,QAAQC,QAAQC,MACnCC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,SACf,UAAW,CACPP,YAAa1D,EAAM2D,QAAQC,QAAQM,MAEvC,YAAa,CACTC,SAAS,GACTC,MAAOpE,EAAM2D,QAAQC,QAAQC,OAEjC,kBAAmB,CACfM,SAAS,GACTC,MAAOpE,EAAM2D,QAAQC,QAAQM,MAEjC,UAAW,CACXG,UAAU,SACVD,MAAMpE,EAAM2D,QAAQC,QAAQC,OAE5B,gBAAiB,CACbQ,UAAU,SACVD,MAAMpE,EAAM2D,QAAQC,QAAQM,OAGpCI,UAAY,CACRR,QAAQ,YAIVS,GAAiB,CAAC,QAET,SAASC,KACpB,IAAM9D,EAAUZ,KADa,EAELa,mBAAsB,MAFjB,mBAEtB1G,EAFsB,KAEhBwK,EAFgB,OAGH9D,mBAAsB,MAHnB,mBAGtB+D,EAHsB,KAGfC,EAHe,KAIvBnC,EAAWC,eAEXmC,EAASC,sBAAW,uCAAC,WAAOC,GAAP,mBAAA5L,EAAA,4DACnBiB,EAAO2K,EAAMxJ,QAAO,SAACC,GAAD,OAAQgJ,GAAeQ,MAAK,SAACC,GAAD,uBAAOzJ,EAAK0J,YAAZ,aAAO,EAAWC,cAAcC,SAASH,UACpFpL,OAAS,GAFK,uBAGf2B,EAAOpB,EAAK,GAHG,SAIFiL,GAAS7J,GAJP,OAKf8J,GADAxM,EAJe,SAMf4L,EAAQ5L,GACR2J,EAASvD,EAAY1D,EAAK8C,SAE1BoG,EAAQ,MACRE,EAAS,GAAD,OAAIpJ,EAAK8C,KAAT,mBAVO,uBAanBoG,EAAQ,MACRE,EAAS,kBAAD,OAAmBG,EAAM,GAAGzG,OAdjB,4CAAD,sDAgBvB,CAACoG,EAASjC,IAtBgB,EAuBuB8C,YAAY,CAACV,WAA1DW,EAvBsB,EAuBtBA,aAAcC,EAvBQ,EAuBRA,cAAeC,EAvBP,EAuBOA,aAGpC,OACI,sBAAKtE,UAAWT,EAAQ0C,KAAxB,SACQ,iDAASmC,KAAT,IAAyBpE,UAAWT,EAAQ0C,KAA5C,UACQ,uBAAKjC,UAAYsE,EAAe/E,EAAQ6C,KAAO7C,EAAQ4D,UAAvD,UACI,eAAC,IAAD,CAAmBnD,UAAU,WAC7B,eAACuE,EAAA,EAAD,CAAYvE,UAAU,OAAtB,oCAGS,OAATlH,EACA,qCACI,eAAC,GAAD,CAAUpB,KAAMoB,MAEpB,uBAAKkH,UAAWsE,EAAe/E,EAAQ4D,UAAY5D,EAAQ6C,KAA3D,UACI,sCAAWiC,MACX,eAAC,IAAD,CAASrE,UAAU,WAEL,OAAVuD,EACA,qCACI,gBAACgB,EAAA,EAAD,CAAYvE,UAAU,OAAtB,0BAAiCuD,OAErC,+BAEJ,uCACI,eAACgB,EAAA,EAAD,CAAYvE,UAAU,OAAtB,uDACA,eAACuE,EAAA,EAAD,CAAYvE,UAAU,OAAtB,2D,SASrBiE,G,iFAAf,WAA0B7J,GAA1B,SAAArC,EAAA,+EACW,IAAIuC,SAAQ,SAAC9B,GAChB,IAAIgM,EAAS,IAAIC,WACjBD,EAAOE,UAAY,kBAAKlM,EAAIgM,EAAOG,SACnCH,EAAOI,WAAWxK,OAJ1B,4C,sBAYA,SAAS8J,GAAYxM,GACjB,OAAOA,EAAKmN,QAHH,uCAGmB,GAAKnN,EAAKmN,QAF7B,0CAE6C,E,gECxHxDlG,GAAYC,aAAW,SAACC,GAAD,OAC3BiG,YAAa,CACXC,YAAa,CACXC,YAAanG,EAAMoG,QAAQ,GAC3BhC,MAAM,WAERiC,YAAa,CACTF,YAAanG,EAAMoG,QAAQ,GAC3BhC,MAAM,WAEVkC,UAAW,CACPH,YAAanG,EAAMoG,QAAQ,GAC3BhC,MAAM,eAEVmC,WAAW,CACPzC,QAAQ,QAEZ0C,YAAY,CACRpC,MAAQ,SAEZqC,WAAW,CACP3C,QAAS,aAMF,SAAS4C,KACpB,IAAMhG,EAAUZ,KACV9G,EAAU0J,aAAYnD,GACxBoH,EAAO,EACP9I,EAAO,EACX7E,EAAKmB,KAAKE,SAAS,SAAAK,GAAC,OAAIA,EAAEmD,KAAOA,IAAS8I,OAC1C,IAAIC,EAAQ/I,EAAK8I,EACXE,EAAcD,EAAQ,GAAMD,EAAO,EACnCG,EAAcD,EAAchJ,EAAK+I,EAAQ,IAAM,EAC/CG,EAAcD,EAAa,EAAI,cAAgB,gBAC/CE,EAAcF,EAAa,EAAb,UAAoBG,KAAKC,MAAMJ,GAA/B,QACpB,OACI,qCACI,gBAACK,GAAA,EAAD,CAAKC,SAAS,WAAWtD,QAAQ,cAAjC,UACI,eAACuD,GAAA,EAAD,CAAkBlG,UAAY0F,EAAcnG,EAAQwF,YAAcxF,EAAQ4F,UAAWgB,QAASP,EAAaQ,MAAOT,IAClH,gBAACK,GAAA,EAAD,CACIK,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPP,SAAS,WACTtD,QAAQ,OACRE,WAAW,SACXD,eAAe,SARnB,UAUA,eAAC,KAAD,CAAwB5C,UAAY0F,EAAcnG,EAAQ+F,WAAaG,EAAQ,EAAIlG,EAAQ8F,YAAc9F,EAAQ+F,WAAYtC,SAAS,UACtI,eAACuB,EAAA,EAAD,CAAY4B,QAAQ,UAAUxF,UAAU,MAAMX,UAAY0F,EAAenG,EAAQ2F,YAAc3F,EAAQ6F,WAAvG,SAAoHS,YCpDpI,IAAMlH,GAAYC,aAAW,SAACC,GAAD,OAC3BiG,YAAa,CACX2B,OAAQ,CACNzB,YAAanG,EAAMoG,QAAQ,IAE7ByB,UAAW,CACT/D,QAAU,QAEZgE,WAAY,CACVhE,QAAU,oBAKD,SAASiE,KACtB,IAAMrH,EAAUZ,KACV9G,EAAU0J,aAAYnD,GACxByI,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EAEVpP,EAAKmB,KAAKE,SAAS,SAAA+B,GAAG,OAAIA,EAAIyB,KACvBzB,EAAIsB,IAAIM,KAAQ5B,EAAIsB,IAAIM,KNoEL,IMpE2BkK,IAAY9L,EAAIsB,IAAIM,KNmE/C,GMnEqEiK,IAAUD,IAAYG,IAC7GC,OAEP,IAAMC,EAAS,CAACL,EAAOC,EAAOC,EAAOC,EAAOC,GACtCxB,EAAQyB,EAAOC,QAAO,SAACC,EAAE7N,GAAH,OAAO6N,EAAE7N,IAAE,GACjCsD,EA6BT,SAAuBqK,GACrB,IAAIG,EAAkB,GAClBC,EAAMJ,EAAOC,QAAO,SAACpK,EAAExD,GAAH,OAAOwD,EAAExD,IAAE,GACnC,GAAI+N,EAAM,EAAG,CACX,IAAIC,EAAML,EAAO5N,KAAI,SAAAC,GAAC,OAAEuM,KAAK0B,MAAM,IAAIjO,EAAE+N,MACrC9M,EAAM,IAAM+M,EAAIJ,QAAO,SAACpK,EAAExD,GAAH,OAAOwD,EAAExD,IAAE,GACtCgO,EAAI,IAAM/M,EACV6M,EAAME,EAAIjO,KAAI,SAAAC,GAAC,gBAAKA,EAAL,QAEjB,OAAO8N,EAtCOI,CAAeP,GACtBQ,EAAS,CAAClJ,GAAUF,EAAUC,EAAUE,GAASC,IAExD,OAEE,gBAACsH,GAAA,EAAD,CAAKC,SAAS,WAAWjG,UAAWyF,EAAO,EAAIlG,EAAQoH,WAAapH,EAAQmH,UAA5E,UACE,gBAACnC,EAAA,EAAD,CAAYlF,MAAM,SAAS8G,QAAQ,UAAUlD,MAAM,YAAYjD,UAAWT,EAAQkH,OAAlF,wBAA+FhB,EAA/F,kBAA8GsB,EAA9G,qBACA,eAACf,GAAA,EAAD,CACIK,IAAK,GACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPP,SAAS,WACTtD,QAAQ,OACRE,WAAW,SACXD,eAAe,SACf5C,UAAWT,EAAQkH,OATvB,SAYI5J,EAAKvD,KAAI,SAACqD,EAAGgL,GAAJ,OACP,sBAAK/F,MAAO,CAAC1C,WAAYwI,EAAOC,GAAQ1B,SAAS,WAAYlH,MAAOpC,EAAIuF,OAAO,iB,wBCjDrFvD,GAAYC,aAAW,SAACC,GAAD,OAC3BiG,YAAa,CACX8C,SAAU,CACR5C,YAAanG,EAAMoG,QAAQ,GAC3B/F,WAAY,eAEd2I,UAAW,CACP5E,MAAQ,QACRZ,YAAa,MACbE,YAAa,oBAEjBuF,KAAM,CACFC,KAAM,cAKC,SAASC,KACpB,IAAMzI,EAAUZ,KACV7G,EAAQyJ,aAAY0G,GACpB5G,EAAWC,eAEX4G,EAAsB,CAAC,WAAY,UAAW,aAAc,eAC5DC,EAA6B,CAAC,WAAY,UAAW,SAAU,UAC/DC,EAAUF,EAAQC,EAAMtD,QAAQ/M,IACtC,OAEI,eAACuQ,GAAA,EAAD,CAAWrI,UAAWT,EAAQqI,SAAWzB,QAAQ,WAAWrE,KAAK,QAC7DwG,QAAM,EACNlC,MAAOgC,EACPG,SAAU,SAAC9L,GAAK,IAAD,EACPF,EAAM4L,EAAMD,EAAQrD,QAAR,UAAgBpI,EAAEoE,OAAOuF,aAAzB,QAAkC,aAClD/E,EAAS/D,EAAcf,KAE3BiM,WAAY,CACRjJ,QAAS,CACL0C,KAAM1C,EAAQsI,UACdY,eAAgBlJ,EAAQsI,YAGhCa,YAAa,CACTnJ,QAAS,CAAEuI,KAAMvI,EAAQuI,OAdjC,SAiBKI,EAAQ5O,KAAI,SAACqP,GAAD,OACT,eAACC,GAAA,EAAD,CAAuBxC,MAAOuC,EAA9B,SACKA,GADUA,QCzC/B,IAAMhK,GAAYC,aAAW,SAACC,GAAD,OAC3BiG,YAAa,CACX7C,KAAM,CACJ4G,SAAU,GAEZC,QAAU,CACRnG,QAAQ,OACRC,eAAe,iBAEjBmG,SAAW,CACTpG,QAAQ,OACRE,WAAW,eAKF,SAASmG,KACtB,IAAMzJ,EAAUZ,KACVd,EAAW0D,aAAYxD,GAE7B,OACE,sBAAKiC,UAAWT,EAAQ0C,KAAxB,SACE,eAACgH,GAAA,EAAD,CAAQhD,SAAS,SAAjB,SACE,gBAACiD,GAAA,EAAD,CAAS/C,QAAQ,QAAQnG,UAAWT,EAAQuJ,QAA5C,UACI,gBAACvE,EAAA,EAAD,CAAY4B,QAAQ,KAAKlD,MAAM,UAAUkG,QAAM,EAA/C,yBACgBtL,EAASpF,OAAS,EAAlB,WAA2BoF,EAA3B,KAAyC,MAE3D,uBAAKmC,UAAWT,EAAQwJ,SAAxB,UACE,eAACf,GAAD,IACA,eAACpB,GAAD,IACA,eAACrB,GAAD,c,aCrCN5G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuK,QAAS,CACLnD,SAAU,WACVK,KAAM,OACNC,OAAQ,MACRvD,SAAW,OACXC,MAAQpE,EAAM2D,QAAQC,QAAQ4G,MAElCC,OAAQ,CACJrD,SAAU,WACVO,MAAO,MACPH,IAAK,WA4BEkD,GArBK,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,OACxBnK,EAAUZ,KAIhB,OACI,uCACC+K,GAAUD,GACP,sBAAKzJ,UAAWT,EAAQ+J,OAAxB,SACI,oBAAGxI,KAAM2I,EAAT,SACI,sBAAK1K,MAAM,MAAMmD,OAAO,MAAMyH,IAAI,8FAA8FC,IAAI,0BAIhJ,sBAAK5J,UAAWT,EAAQ6J,QAASjJ,QAZjB,WACZsJ,GAA+B,KAApBI,GAAWC,OAAe1R,OAAO2R,SAASjJ,KAAO2I,EAAQ,SAASI,GAAWC,OAW5F,SACI,6BAAIN,EAAQK,GAAWT,gBCnBjCvK,GAAQmL,YAAe,CAC3BxH,QAAS,CACPC,QAASwH,IACTC,UAAW,CACTb,KAAM,QAERnK,WAAY,CACVjH,QAAS,WAsCAkS,gBAjCsC,SAAAtL,GAAK,OACxDiG,YAAa,CACXsF,IAAK,CACHlH,UAAW,UAEbmG,KAAM,CACJpD,SAAS,WACTI,IAAI,OACJG,MAAO,MACPF,KAAK,MACLC,OAAQ,MACRrH,WAAa,QACbyD,QAAS,OACTC,eAAgB,SAChBC,WAAY,cAmBHsH,EAbH,SAAC,GAAD,IAAG5K,EAAH,EAAGA,QAAH,OACV,gBAAC,IAAD,CAAkBV,MAAOA,GAAzB,UACE,eAACwL,EAAA,EAAD,IACA,uBAAKrK,UAAWT,EAAQ6K,IAAxB,UACE,eAACpB,GAAD,IACA,sBAAKhJ,UAAWT,EAAQ8J,KAAxB,SACE,eAAChG,GAAD,MAEF,eAAC,GAAD,CAAYmG,MAAM,aAAaE,QAAQ,EAAOD,QAAQ,yDCvD/Ca,GAAQC,YAAe,CAClCtM,QAAS,CACPb,WAAYoN,EACZ3S,KAAMwG,EACNR,SAAUG,KCKMyM,QACW,cAA7BrS,OAAO2R,SAASW,UAEe,UAA7BtS,OAAO2R,SAASW,UAEhBtS,OAAO2R,SAASW,SAAS7Q,MACvB,2DCXN8Q,IAASC,OACP,eAAC,KAAD,CAAUN,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFO,SAASC,eAAe,SD6HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9H,GACL5K,QAAQ4K,MAAMA,EAAM+H,a,yIE9I5B,IAAmYC,EAA/XC,EAAO,EAAQ,KAAWA,KAAKpU,EAAS,EAAQ,KAAoVF,EAAOC,QAAU,SAASsU,IAAK,OAAI7T,gBAAgB6T,EAAUD,EAAKpU,KAAiBmU,IAASA,EAAOC,EAAKpU,S","file":"static/js/main.d20b8243.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"05a5069ab37953881250.worker.js\");\n};","/* eslint-disable import/no-webpack-loader-syntax */\nimport comlinkWorker from 'comlink-loader!./bWorker'\nimport BackgroundWorker, {BackWorkerClassConstructors, SnpVal} from './bWorker'\nimport { PopulationType } from '../../../genomeLib/frequencyEvaluator'\nimport { snp } from '../../../genomeLib/snps'\n\n\nconst BackWorkerFactory = new comlinkWorker<BackWorkerClassConstructors>()\n\nexport type Progress = (values : SnpVal[] ) => void\n\n interface IDataQuery {\n     snps : snp [],\n     type  : PopulationType\n }\n const Timer = 200 // in ms\n/**\n * Foreground worker class. This class is designed to work  on the UI Javascript thread\n */\nexport default class ForegroundWorker {\n\n    private worker : BackgroundWorker | null = null // null when no computation is occurring\n    private data : IDataQuery | null = null // null when no comptation is reqested\n    private timerID : number | null= null // null when not defined.\n    private progress : Progress\n\n    constructor( progress : Progress ){\n        this.progress = progress\n    }\n\n    async start( snps : snp[], type : PopulationType ) : Promise<void> {\n        if( this.worker ) throw Error(`foreground worked invoked while processing.`)\n        this.data = { snps, type }\n        this.worker = await new BackWorkerFactory.default(this.data.type)\n        this.worker.start(this.data.snps)\n        this.startWorker()\n    }\n\n    stop(){\n        if( this.timerID ) window.clearTimeout( this.timerID )\n        this.timerID = null\n        this.data = null\n    }\n\n    private async startWorker() : Promise<void> {\n\n        this.worker!.start(this.data!.snps)\n\n        const doWork = async ()=> {\n            if( this.data && this.worker ){\n                this.timerID = null\n                let res = await this.worker.Next()\n                if( this.data && this.worker ){ // need to re test becase ight have changed in the await above.\n                    if( res.length > 0 ){\n                        this.progress(res)\n                        this.timerID = window.setTimeout(doWork, Timer)\n                    } else {\n                        this.worker = null // we have completed.\n                        console.log('Completly Done...')\n                    }\n                }\n            }\n        }\n\n        doWork()\n    }\n\n}","import * as fs from 'fs'\n\n\nexport interface snp {  // tslint:disable-line\n    id : string,\n    chr: string, \n    bases : string\n}\n\nexport default class SNPs {  // tslint:disable-line\n\n    private list : snp []\n\n    constructor ( text : string, chrs? : string[] ){\n        this.list = []\n        let lines = text.split('\\n')\n        lines.forEach((line)=>{\n            if( line.startsWith(\"rs\")) {\n                let items = line.split(\"\\t\").map((v)=>v.trim())\n                if( items.length === 4 ){\n                    let chr = items[1].toUpperCase()\n                    if( chrs === undefined || chrs.findIndex(v=>v===chr) >=0  ){\n                        if( items[3].match(/[AGCT]/) && !Number.isNaN(Number(items[2]))){\n                            this.list.push ({\n                                id : items[0],\n                                chr,\n                                bases : items[3].toUpperCase()\n                            })\n                        }\n                    }\n                }\n            }\n        })\n    }\n\n    get snpList() : snp [] {\n        return this.list\n    }\n\n    snpChromosome(chr:string) : snp [] {\n        chr = chr.trim().toUpperCase()\n        return this.list.filter((v)=>v.chr===chr)\n    }\n\n    static async fromFile( file : string ) : Promise<SNPs> {\n        if ( fs.existsSync(file)){\n            return new Promise((res,rej)=>{\n                fs.readFile(file, {}, (err, data)=>{\n                    if( err ) rej(err)\n                    let obj = new SNPs(data.toString())\n                    res(obj)\n                })\n            })\n        } else {\n            throw new Error(`file ${file} noy found!`)\n        }\n    }\n\n\n}","import ForegroundWorker from './appWorker/fWorker'\nimport {SnpEl} from './appMainSlice'\nimport {PopulationType} from '../../genomeLib/frequencyEvaluator'\nimport { SortDirection, TableHeaderSortType } from './appTableHeader'\nimport { SnpVal } from './appWorker/bWorker'\nimport Snps ,{snp} from '../../genomeLib/snps'\n\nexport type Update = (list :SnpEl[] ) => void\n\nconst sortFunctions = {\n    ID : sortByID,\n    Chromosome : sortByChr,\n    Base : sortByBase,\n    Frequency : sortByPerc,\n    Publications : sortByPub\n}\n\nexport default class SnpList {\n\n    private worker : ForegroundWorker | null = null\n    private update : Update\n    private list : SnpEl [] = []\n    private sortId : TableHeaderSortType = 'ID'\n    private sortDir: SortDirection = 'asc'\n\n    constructor( update : Update ) {\n        this.update = update\n    }\n\n    start( data : string, type : PopulationType  ){\n        if( this.worker ) this.worker.stop()\n        const progress = ( vals : SnpVal[] )=>{\n            this.merge(vals)\n            if( this.sortId === 'Frequency' || this.sortId === 'Publications')  this.doSort()\n            this.sendUpdate()\n        }\n        let list = new Snps(data,[\"Y\",\"MT\"])\n        this.list= list.snpList.map(v=>this.toSnpEl(v))\n        this.doSort()\n        this.worker = new ForegroundWorker(progress)\n        this.worker.start(list.snpList, type)\n    }\n\n    sort( id : TableHeaderSortType, dir : SortDirection ){\n        this.sortId = id\n        this.sortDir= dir\n        this.doSort()\n        this.sendUpdate()\n    }\n\n    private doSort() {\n        this.list = this.list.sort((a,b)=>sortFunctions[this.sortId](a.val,b.val,this.sortDir))\n    }\n\n    private sendUpdate(){\n        let clone = this.list.map(e=>({done:e.done, val: {...e.val}})) //  deep clone\n        this.update(clone)\n    }\n\n    private merge(vals : SnpVal []) {\n        this.list.forEach( el =>{\n            if( !el.done ){\n                let val = vals.find(v=>el.val.snp.id === v.snp.id)\n                if( val ){\n                    el.done = true\n                    el.val.perc = val.perc\n                    el.val.pub = val.pub\n                }\n            }\n        })\n    }\n\n    private toSnpEl( s : snp ) : SnpEl {\n        return {\n            val : {\n                snp: s,\n                perc : null,\n                pub : 0\n            },\n            done : false\n        }\n    }\n}\n\nfunction sortByID( a : SnpVal, b : SnpVal, dir : SortDirection ): number {\n    let v1 = parseInt(a.snp.id.substr(2))\n    let v2 = parseInt(b.snp.id.substr(2))\n    return  dir === 'asc' ? v1-v2 : v2-v1\n}\n\nfunction sortByChr( a : SnpVal, b : SnpVal, dir : SortDirection) : number {\n    return sortByTextField(a,b,dir,'chr')\n}\n\nfunction sortByBase(a : SnpVal, b : SnpVal, dir : SortDirection) : number {\n    return sortByTextField(a,b,dir,'bases')\n}\n\nfunction sortByTextField(a : SnpVal, b : SnpVal, dir : SortDirection, type : keyof snp) : number {\n    let v1 = a.snp[type]\n    let v2 = b.snp[type]\n    let d  = dir === 'asc' ? 1 : -1\n    return d *( v1>v2 ? 1 : -1)\n}\n\nfunction sortByPerc(a : SnpVal, b : SnpVal, dir : SortDirection) : number {\n    return sortByNullNumber(a,b,dir,'perc')\n}\n\nfunction sortByPub(a : SnpVal, b : SnpVal, dir : SortDirection) : number {\n    return sortByNullNumber(a,b,dir,'pub')\n}\n\nfunction sortByNullNumber(a : SnpVal, b : SnpVal, dir : SortDirection, type : keyof SnpVal) : number {\n    let v1 = a[type] ?? 0\n    let v2 = b[type] ?? 0\n    let d  = dir === 'asc' ? 1 : -1\n    return d *( v1>v2 ? 1 : -1)\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store'\nimport {PopulationType} from '../../genomeLib/frequencyEvaluator'\nimport { SnpVal } from './appWorker/bWorker';\n\n/*\n *\n * Population Type Slide\n *  \n*/\n\ninterface PopulationTypeState {\n    population : PopulationType\n  }\n  \n  const initialPoplationTypeState: PopulationTypeState = {\n    population : 'European'\n  };\n\n  export const populationTypeSlice = createSlice({\n    name: 'PopulationType',\n    initialState: initialPoplationTypeState,\n    reducers: {\n        setPopulation : ( state, action : PayloadAction<PopulationType> ) => {\n            state.population = action.payload\n        }\n      }\n    })\n  \n  export const {setPopulation} = populationTypeSlice.actions;\n  export const selecPopulation= (state: RootState) => state.population.population\n  export default populationTypeSlice.reducer;\n\n  /*\n *\n * Filename\n *  \n*/\n\ninterface FilenameTypeState {\n  filename : string\n}\n\nconst initialFilenameState: FilenameTypeState = {\n  filename : ''\n};\n\nexport const filenameSlice = createSlice({\n  name: 'Filename',\n  initialState: initialFilenameState,\n  reducers: {\n      setFilename : ( state, action : PayloadAction<string> ) => {\n          state.filename = action.payload\n      }\n    }\n  })\n\nexport const {setFilename} = filenameSlice.actions;\nexport const selecFilename= (state: RootState) => state.filename.filename\nexport const filenameReducer= filenameSlice.reducer;\n\n/*\n *\n * Snps Slide\n *  \n */\n  export interface SnpEl {\n    val  : SnpVal,\n    done : boolean\n}\n\n  interface SnpsState {\n    list : SnpEl[]\n  }\n  \n  const initialState: SnpsState = {\n    list : []\n  };\n\n  export const snpsSlice = createSlice({\n    name: 'Snps',\n    initialState,\n    reducers: {\n        setSnps : ( state, action : PayloadAction<SnpEl[]> ) => {\n            state.list  = action.payload\n        }\n      }\n    })\n  \n  export const { setSnps } = snpsSlice.actions;\n  export const selectSnps= (state: RootState) => state.snps\n  export const snpsReducer= snpsSlice.reducer;\n\n/*\n *\n * Thresholds for freqency\n *  \n */\nexport const midThreshold = 0.5\nexport const lowThreshold = 0.25\nexport const midColor = \"#FFFAAA\"\nexport const lowColor = \"#FFAAAA\"\nexport const higColor = \"#A0A0FF\"\nexport const noColor  = \"#FFFFFF\"\nexport const unkColor = \"#AAAAAA\"\n\n","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableCell, TableHead, TableRow, TableSortLabel } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width:\"100%\"\n      },\n      container: {\n      },\n      header :{\n          background:\"#FAFAFA\",\n          fontWeight: \"bold\"\n      }\n}))\n\nexport type TableHeaderSortType = 'ID' | 'Chromosome' | 'Base' | 'Frequency' | 'Publications' \nexport type SortDirection = 'asc' | 'desc'\ntype AlignType = 'left' | 'right'\ntype OnListSort = ( id : TableHeaderSortType, dir : SortDirection ) => void\ninterface TableHeader {\n    id : TableHeaderSortType,\n    align : AlignType\n    text : string\n}\nconst TableHeaders : TableHeader [] = [\n    {\n        id : 'ID',\n        align : 'left',\n        text : \"SNP id\"\n    },\n    {\n        id : 'Chromosome',\n        align : 'right',\n        text : 'Chromosome'\n    },\n    {\n        id : 'Base',\n        align : 'right',\n        text : 'Base'\n    },\n    {\n        id : 'Frequency',\n        align : 'right',\n        text : 'Frequency'\n    },\n    {\n        id : 'Publications',\n        align :'right',\n        text : 'Publications'\n    }\n]\n\ninterface SnpsTableHeadProps {sort : OnListSort }\n\nexport default function AppTableHeader ({sort} : SnpsTableHeadProps) {\n    const classes = useStyles();\n    const [orderBy, setOrderBy] = useState<TableHeaderSortType>('ID')\n    const [direction, setDirection] = useState<SortDirection>('asc')\n    const onClick = (id : TableHeaderSortType) => {\n        let dir : SortDirection = 'asc'\n        if( orderBy === id ){\n            dir = direction === 'asc' ? 'desc' : 'asc'\n        } \n        setOrderBy(id)\n        setDirection(dir)\n        sort(id, dir)\n    }\n    return(\n        <TableHead>\n        <TableRow>\n            {\n                TableHeaders.map(header=>(\n                    <TableCell align={header.align}  className={classes.header} key={header.id}>\n                        <TableSortLabel\n                            active={orderBy===header.id}\n                            direction={direction}\n                            onClick={()=>onClick(header.id)}\n                            >\n                            {header.text}\n                        </TableSortLabel>\n                    </TableCell>\n                ))\n            }\n        </TableRow>\n      </TableHead>\n    )\n}\n","import React  from \"react\";\nimport { TableBody, TableCell, TableRow } from \"@material-ui/core\";\nimport { midColor, lowColor, midThreshold, lowThreshold, SnpEl, noColor, unkColor, higColor } from \"../appMain/appMainSlice\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n     undefined :{\n        background: unkColor,\n      },\n      novalue : {\n        background: noColor,\n      },\n      high : {\n        background: higColor,\n      },\n      mid : {\n        background: midColor,        \n      },\n      low : {\n        background: lowColor,        \n      }\n}))\n\ninterface SnpsTableBodyProps { list : SnpEl [] }\n\nexport default function AppTableBody( { list } : SnpsTableBodyProps) {\n    const classes = useStyles();\n    const classSelector = ( el : SnpEl ) : string => {\n        let val = classes.undefined\n        if( el.done ){\n            if( el.val.perc ){\n                val = classes.high\n                if( el.val.perc < midThreshold  ) val = classes.mid\n                if( el.val.perc < lowThreshold ) val = classes.low\n    \n            } else {\n                val = classes.novalue\n            }\n        }\n        return val\n    }\n    return (\n        <TableBody>\n        {list.map((el) => (\n          <TableRow key={el.val.snp.id} className={classSelector(el)}>\n            <TableCell component=\"th\" scope=\"row\"><a  target='_blank' href={`https://www.ncbi.nlm.nih.gov/snp/${el.val.snp.id}`} rel=\"noreferrer\">{el.val.snp.id}</a></TableCell>\n            <TableCell align=\"right\">{el.val.snp.chr}</TableCell>\n            <TableCell align=\"right\">{el.val.snp.bases}</TableCell>\n            <TableCell align=\"right\">{el.val.perc ? el.val.perc.toFixed(2) : \"-\"}</TableCell>\n            <TableCell align=\"right\">{el.val.pub > 0 ? el.val.pub  : el.val.perc ? \"0\" : \"-\"} </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    )\n}","import React, { useEffect, useRef } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Table, TableContainer } from \"@material-ui/core\";\nimport SnpList from './snpList'\nimport { setSnps, selectSnps, SnpEl, selecPopulation } from \"./appMainSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppTableHeader, { TableHeaderSortType, SortDirection } from './appTableHeader'\nimport AppTableBody from './appTableBody'\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width:\"100%\"\n      },\n      container: {\n      }\n}))\n\n// need to use this mode for usign function calc\nconst containerStyle = {maxHeight: 'calc(100% - 2em)'}\n\ninterface snpsTableProps { data : string }\n\n\nexport default function AppTable({ data } : snpsTableProps) {\n    const classes = useStyles()\n    let worker = useRef<SnpList|null>(null)\n    const dispatch= useDispatch();\n    const snps = useSelector(selectSnps)\n    const type = useSelector(selecPopulation)\n\n    useEffect(()=>{\n        const update = (list : SnpEl [] ) =>{\n            dispatch(setSnps(list))\n        }\n        if(!worker.current) worker.current = new SnpList(update)\n        worker.current.start(data,type)\n    },[data, dispatch,type])\n\n\n    const onSort = ( id : TableHeaderSortType, dir : SortDirection) =>{\n        if( worker.current ) worker.current.sort(id, dir )\n    }\n\n    return (\n            <TableContainer component={Paper} className={classes.container} style={containerStyle}>\n                <Table className={classes.table} size=\"small\" stickyHeader aria-label=\"simple table\">\n                    <AppTableHeader sort={onSort}/>\n                    <AppTableBody list={snps.list}/>\n                </Table>\n            </TableContainer>\n    )\n}\n","import React, {useState, useCallback} from 'react'\nimport  { useDropzone } from \"react-dropzone\"\nimport { FileWithPath } from \"file-selector\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Typography from '@material-ui/core/Typography';\nimport SnpTable from './appTable'\nimport { useDispatch } from 'react-redux';\nimport { setFilename } from './appMainSlice';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n            width:'100%',\n            height:'100%',\n            padding:'4px'\n        },\n        drop :{\n            width:'100%',\n            height:'100%',\n            borderWidth:'2px',\n            borderStyle: 'dotted',\n            borderColor: theme.palette.primary.light,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n            \"&:hover\": {\n                borderColor: theme.palette.primary.dark\n              },\n            \"& .AddIcn\" :{\n                fontSize:80,\n                color: theme.palette.primary.light\n            },\n            \"&:hover .AddIcn\" :{\n                fontSize:80,\n                color: theme.palette.primary.dark\n            },\n            \"& .text\" :{\n            textAlign:'center',\n            color:theme.palette.primary.light \n            },\n            \"&:hover .text\" :{\n                textAlign:'center',\n                color:theme.palette.primary.dark \n            }\n        },\n        noDisplay : {\n            display:'none'\n        }\n    }))\n\n    const textExtensions = ['.txt']\n\n    export default function AppMain(){\n        const classes = useStyles();\n        const [text, setText] = useState<string|null>(null)\n        const [error, setError] = useState<string|null>(null)\n        const dispatch = useDispatch();\n\n        const onDrop = useCallback(async (files: FileWithPath[]) =>  {\n            let list = files.filter((file)=>textExtensions.some((ext)=>file.path?.toLowerCase().endsWith(ext)))\n            if( list.length > 0 ) {\n                let file = list[0]\n                let data = await readFile(file)\n                if( sanityCheck(data)){\n                    setText(data)\n                    dispatch(setFilename(file.name))\n                } else {\n                    setText(null)\n                    setError(`${file.name} is not valid`)\n                }\n            } else {\n                setText(null)\n                setError(`unable to load ${files[0].name}`)\n            }\n        }, [setText, dispatch])\n        const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n    \n        return (\n            <div className={classes.root}>\n                    <div {...getRootProps()} className={classes.root}>\n                            <div className={ isDragActive ? classes.drop : classes.noDisplay}>\n                                <ArrowDownwardIcon className=\"AddIcn\"/>\n                                <Typography className=\"text\">Drop the file here.</Typography>\n                            </div> \n                            {\n                                text !== null ?\n                                <>\n                                    <SnpTable data={text}/>\n                                </> :\n                                <div className={isDragActive ? classes.noDisplay : classes.drop}>\n                                    <input {...getInputProps()} />\n                                    <AddIcon className=\"AddIcn\"/>\n                                    {\n                                        error !== null ?\n                                        <>\n                                            <Typography className=\"text\">🖐 {error}</Typography>\n                                        </> :\n                                        <></>\n                                    }   \n                                    <>\n                                        <Typography className=\"text\">Drag and Drop here your 23andme txt file.</Typography>\n                                        <Typography className=\"text\">or click here to select the file.</Typography>\n                                    </>\n                                </div> \n                            }\n                    </div>\n            </div>\n        )\n    }\n\n    async function readFile ( file : FileWithPath ) : Promise<string> {\n        return new Promise((res)=>{\n            let reader = new FileReader()\n            reader.onloadend = ()=> res(reader.result as string)\n            reader.readAsText(file)\n        })\n    }\n\n    // Sanity check that the file is a valid\n    // 23andme SNP file.\n    const key1 = \"This data file generated by 23andMe\"\n    const key2 = \"# rsid\tchromosome\tposition\tgenotype\"\n    function sanityCheck(data:string) : boolean {\n        return data.indexOf(key1) > 0 && data.indexOf(key2) > 0\n    }\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectSnps } from '../appMain/appMainSlice'\nimport { Box, CircularProgress, createStyles, makeStyles, Theme, Typography } from '@material-ui/core'\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cirProgress: {\n      marginRight: theme.spacing(2),\n      color:'#0000FF',\n    },\n    txtProgress: {\n        marginRight: theme.spacing(2),\n        color:'#0000FF',\n    },\n    cirHidden: {\n        marginRight: theme.spacing(2),\n        color:'transparent',    \n    },\n    textHidden:{\n        display:'none'\n    },\n    iconDisplay:{\n        color : 'white'\n    },\n    iconHidden:{\n        display: 'none'\n    }\n  }),\n);\n\n\nexport default function AppProgress() {\n    const classes = useStyles();\n    const snps    = useSelector(selectSnps)\n    let todo = 0\n    let done = 0\n    snps.list.forEach( v => v.done ? done++ : todo++)\n    let total = done+todo\n    const showProgres = total > 0 &&  todo > 0\n    const percentage  = showProgres ? done/total * 100 : 0\n    const progVariant = percentage > 0 ? \"determinate\" : \"indeterminate\";\n    const progLabel   = percentage > 0 ? `${Math.round(percentage)}%` : ``\n    return(\n        <>\n            <Box position=\"relative\" display=\"inline-flex\">\n                <CircularProgress className={ showProgres ? classes.cirProgress : classes.cirHidden} variant={progVariant} value={percentage} /> \n                <Box\n                    top={0}\n                    left={0}\n                    bottom={0}\n                    right={0}\n                    position=\"absolute\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                >\n                <CheckCircleRoundedIcon className={ showProgres ? classes.iconHidden : total > 0 ? classes.iconDisplay : classes.iconHidden} fontSize='large' />\n                <Typography variant=\"caption\" component=\"div\" className={ showProgres ?  classes.txtProgress : classes.textHidden}>{progLabel}</Typography>\n                </Box>\n            </Box>\n        </>\n    )\n}\n\n\n\n\n\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector } from 'react-redux';\nimport { Box } from '@material-ui/core';\nimport { midColor, lowColor, midThreshold, lowThreshold, noColor, unkColor, higColor, selectSnps } from \"../appMain/appMainSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      marginRight: theme.spacing(2),\n    },\n    boxHidden :{\n      display : 'none'\n    },\n    boxDisplay :{\n      display : 'inline-flex'\n    }\n  }),\n);\n\nexport default function AppInfo() {\n  const classes = useStyles();\n  const snps    = useSelector(selectSnps)\n  let hPerc=0\n  let mPerc=0\n  let lPerc=0\n  let uPerc=0\n  let nPerc=0\n\n  snps.list.forEach( snp => snp.done ? \n        (snp.val.perc ? (snp.val.perc < lowThreshold ? lPerc++ : ( snp.val.perc < midThreshold ? mPerc++ : hPerc++)) : uPerc++ ) \n        : nPerc++ )\n\n   const values = [hPerc, mPerc, lPerc, uPerc, nPerc]   \n   const total = values.reduce((t,v)=>t+v,0)\n   const perc = toPersentages( values )\n   const colors = [higColor, midColor, lowColor, noColor, unkColor]\n\n  return (\n\n    <Box position=\"relative\" className={total >0 ? classes.boxDisplay : classes.boxHidden}>\n      <Typography align='center' variant=\"caption\" color='secondary' className={classes.margin}> {`${total} Snps, ${lPerc} low frequency`}</Typography>\n      <Box\n          top={20}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          className={classes.margin}\n      >\n        {\n          perc.map((el,index)=>(\n            <div style={{background: colors[index], position:'relative', width: el, height:'5px'}}/>\n          ))\n        }\n      </Box>\n    </Box>\n\n  );\n}\n\nfunction toPersentages(values : number [] ) : string [] {\n  let ret : string [] = []\n  let sum = values.reduce((s,v)=>s+v,0)\n  if( sum > 0 ){\n    let per = values.map(v=>Math.floor(100*v/sum))\n    let err = 100 - per.reduce((s,v)=>s+v,0) // error in roundinng. Must be positive\n    per[0] += err // to make sure that rounds up to 100\n    ret = per.map(v=>`${v}%`)\n  }\n  return ret\n}","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { selecPopulation as selectPopulation, setPopulation } from '../appMain/appMainSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MenuItem, TextField } from '@material-ui/core';\nimport { PopulationType } from '../../genomeLib/frequencyEvaluator';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    combobox: {\n      marginRight: theme.spacing(2),\n      background: 'transparent'\n    },\n    textColor :{\n        color : 'white',\n        borderWidth: '1px',\n        borderColor: 'white !important'\n    },\n    icon: {\n        fill: 'white',\n    },\n  }),\n);\n\nexport default function AppSelector() {\n    const classes = useStyles();\n    const type  = useSelector(selectPopulation)\n    const dispatch = useDispatch()\n\n    const options : string [] = ['European', \"African\", \"East Asian\", \"South Asian\"]\n    const types : PopulationType[]   = ['European', 'African', 'SAsian', 'EAsian']\n    const typeName= options[types.indexOf(type)]\n    return (\n\n        <TextField className={classes.combobox}  variant='outlined' size='small'\n            select\n            value={typeName}\n            onChange={(e)=>{\n                let val = types[options.indexOf(e.target.value ?? 'European')]\n                dispatch(setPopulation(val))\n            }}\n            InputProps={{\n                classes: {\n                    root: classes.textColor,\n                    notchedOutline: classes.textColor\n                  }\n            }}\n            SelectProps={{\n                classes: { icon: classes.icon },\n              }}\n        >\n            {options.map((option) => (\n                <MenuItem key={option} value={option}  >\n                    {option}\n                </MenuItem>\n            ))}\n      </TextField>\n    )\n}","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AppProgress from './appProgress'\nimport AppInfo from './appInfo'\nimport { useSelector } from 'react-redux';\nimport { selecFilename } from '../appMain/appMainSlice';\nimport AppSelector from './appSelector';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    toolbar : {\n      display:'flex',\n      justifyContent:'space-between'\n    },\n    toolList : {\n      display:'flex',\n      alignItems:'center'\n    }\n  }),\n);\n\nexport default function AppToolbar() {\n  const classes = useStyles();\n  const filename = useSelector(selecFilename)\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\" className={classes.toolbar}>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              SNPs and Me { filename.length > 0  ? `[${filename}]` : ''}\n            </Typography>\n          <div className={classes.toolList}>\n            <AppSelector/>\n            <AppInfo/>\n            <AppProgress/>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from \"react\";\nimport gitVersion from '../../tools/gitInfo.json'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    version: {\n        position: 'absolute', \n        left: '14px', \n        bottom: '0px',\n        fontSize : '12px',\n        color : theme.palette.primary.main\n    },\n    ribbon :{\n        position: 'absolute', \n        right: '0px', \n        top: '0px'\n    }\n}))\n\n\ntype gitInfoProps = { label : string, baseURL? : string, forkme : Boolean }\n\nconst  AppVersion = ({label, baseURL, forkme}:gitInfoProps) => {\n        const classes = useStyles();\n        const handleClick = () => {\n            if( baseURL && gitVersion.long !== \"\" )  window.location.href = baseURL+'/tree/'+gitVersion.long;\n        }\n        return ( \n            <>\n            {forkme && baseURL && (\n                <div className={classes.ribbon}> \n                    <a href={baseURL}>\n                        <img width=\"100\" height=\"100\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_red_aa0000.png?resize=100%2C100\" alt=\"Fork me on GitHub\"/>\n                    </a>\n                </div>\n            ) }\n            <div className={classes.version} onClick={handleClick}>\n                <p>{label + gitVersion.version}</p>\n            </div>\n            </>\n        )\n}\n\nexport default AppVersion;","import React from \"react\";\nimport {\n  createMuiTheme,\n  withStyles,\n  createStyles,\n  Theme,\n  WithStyles,\n  StyleRules\n} from \"@material-ui/core/styles\";\nimport {\n  MuiThemeProvider,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport AppMain from  './features/appMain/appMain';\nimport AppToolbar from './features/appToolbar/appToolbar'\nimport AppVersion from './features/appVersion/appVersion'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: {\n      main: \"#fff\"\n    },\n    background: {\n      default: \"#fff\"\n    }\n  }\n});\n\nconst styles: (theme: Theme) => StyleRules<string> = theme =>\n  createStyles({\n    app: {\n      textAlign: \"center\" \n    },\n    main :{\n      position:'absolute',\n      top:'55px',\n      right: '0px',\n      left:'0px',\n      bottom: '0px',\n      background : 'white',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n  });\n\ntype AppProps = {} & WithStyles<typeof styles>;\n\nconst App = ({ classes }: AppProps) => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <div className={classes.app}>\n      <AppToolbar/>\n      <div className={classes.main}>\n        <AppMain />\n      </div>\n      <AppVersion label=\"version : \" forkme={false} baseURL=\"https://github.com/VittorioAccomazzi/Artist\" />\n    </div>\n  </MuiThemeProvider>\n);\n\nexport default withStyles(styles)(App);\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport populationReducer, {snpsReducer, filenameReducer} from '../features/appMain/appMainSlice';\n\nexport const store = configureStore({\n  reducer: {\n    population: populationReducer,\n    snps: snpsReducer,\n    filename: filenameReducer\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var wrap = require('comlink').wrap,Worker = require(\"!worker-loader?{}!/Users/vittorio/Documents/Personal/Project/snpsandme/node_modules/comlink-loader/dist/comlink-worker-loader.js!/Users/vittorio/Documents/Personal/Project/snpsandme/node_modules/babel-loader/lib/index.js??ref--5-oneOf-2!/Users/vittorio/Documents/Personal/Project/snpsandme/src/features/appMain/appWorker/bWorker.ts\"),inst;module.exports = function f() {if (this instanceof f) return wrap(Worker());return inst || (inst = wrap(Worker()));};"],"sourceRoot":""}